{"version":3,"sources":["constants/userConstants.js","constants/orderConstants.js","assets/artisan-logo.png","components/Header.js","actions/userActions.js","components/AlertMessage.js","constants/cartConstants.js","actions/cartActions.js","pages/Cart.js","components/Rating.js","components/Product.js","components/LoadSpinner.js","constants/productConstants.js","actions/productActions.js","pages/Home.js","pages/ProductPage.js","components/FormContainer.js","pages/LoginPage.js","pages/RegisterPage.js","pages/Profile.js","components/FormSteps.js","pages/Shipping.js","pages/Payment.js","pages/ConfirmOrder.js","actions/orderActions.js","pages/OrderPage.js","adminpages/UserList.js","adminpages/ProductList.js","adminpages/ProductEdit.js","adminpages/OrderList.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAIL_REQUEST","USER_DETAIL_SUCCESS","USER_DETAIL_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_MY_LIST_REQUEST","ORDER_MY_LIST_SUCCESS","ORDER_MY_LIST_FAIL","ORDER_MY_LIST_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","Header","userInfo","useSelector","state","userLogin","dispatch","useDispatch","navigate","useNavigate","Navbar","className","collapseOnSelect","Container","to","Brand","src","logo","alt","style","width","Toggle","display","Collapse","id","Nav","Link","NavDropdown","title","name","Item","onClick","console","log","localStorage","removeItem","type","isAdmin","AlertMessage","heading","variant","children","Alert","Heading","fontSize","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_RESET","addToCart","quantity","getState","a","axios","get","data","payload","product","_id","image","price","stockNum","setItem","JSON","stringify","cart","cartItems","Cart","useParams","URLSearchParams","document","location","search","useEffect","removeFromCart","textDecoration","Row","Col","md","length","ListGroup","map","item","ListGroupItem","Image","process","fluid","rounded","Form","Control","as","maxWidth","value","onChange","e","Number","target","size","Array","keys","num","color","Card","reduce","acc","toFixed","disabled","borderRadius","height","Rating","text","Product","Img","Body","Text","rating","numReviews","LoadSpinner","Spinner","animation","role","margin","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAIL_REQUEST","PRODUCT_DETAIL_SUCCESS","PRODUCT_DETAIL_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","listProducts","response","detail","message","listProductDetail","Home","productList","error","loading","products","sm","lg","xl","ProductPage","useState","setQuantity","setRating","comment","setComment","productDetail","productCreateReview","loadingReview","errorReview","successReview","success","description","xs","onSubmit","productId","review","preventDefault","config","headers","Authorization","token","post","FormGroup","controlId","FormLabel","FormControl","backgroundColor","reviews","createdAt","substring","FormContainer","LoginPage","email","setEmail","password","setPassword","url","redirect","has","username","login","placeholder","Button","RegisterPage","setName","passwordConf","setPasswordConf","setMessage","userRegister","register","required","Profile","FormSteps","step1","step2","step3","step4","minWidth","NavItem","Shipping","shippingAddress","address","setAddress","postcode","setPostcode","city","setCity","country","setCountry","Payment","paymentMethod","setPaymentMethod","FormCheck","label","checked","ConfirmOrder","orderCreate","order","totalPrice","pay","parse","getItem","createOrder","orderItems","OrderPage","loaded","setLoaded","orderDetails","orderPay","loadingPay","successPay","orderDeliver","successDeliver","getOrderDetails","isPaid","window","paypal","script","createElement","async","onload","body","appendChild","paypalButtonScript","amount","onSuccess","paymentResult","put","payOrder","paidAt","isDelivered","deliveredAt","UserList","userList","users","successDelete","userDelete","handleDelete","confirm","delete","deleteUser","Table","user","ProductList","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","justifyContent","marginTop","cursor","marginRight","ProductEdit","setPrice","setImage","setStockNum","setDescription","uploading","setUploading","productUpdate","successUpdate","errorUpdate","loadingUpdate","uploadImageHandler","file","files","formData","FormData","append","updateProduct","Group","Label","OrderList","orderList","orders","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existsItem","find","filter","val","userDetail","userUpdateProfile","DELIVERload","orderMyList","storageItems","storageUserInfo","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"iUAAaA,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAc,cACdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBACnBC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,EAA2B,2BAC3BC,EAA4B,4BAC5BC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAiB,iBACjBC,EAAkB,kBAClBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBCpBnBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAqB,qBACrBC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAiB,iBACjBC,EAAkB,kBAClBC,EAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBACtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sB,QCtBpB,OAA0B,yCC2F1BC,GAlFA,WACb,IACQC,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAEFI,EAAWC,cACXC,EAAWC,eAOjB,OACE,iCACE,cAACC,EAAA,EAAD,CACEC,UAAU,gDACVC,kBAAgB,EAFlB,SAIE,eAACC,EAAA,EAAD,CAAWF,UAAU,kBAArB,UAEE,cAAC,gBAAD,CAAeG,GAAG,GAAlB,SACE,cAACJ,EAAA,EAAOK,MAAR,CAAcJ,UAAU,OAAxB,SACE,qBAAKK,IAAKC,GAAMC,IAAI,OAAOC,MAAO,CAAEC,MAAO,eAG/C,cAACV,EAAA,EAAOW,OAAR,CAAe,gBAAc,qBAC7B,qBAAKF,MAAO,CAAEG,QAAS,QAAUX,UAAU,kBAA3C,SACE,cAACD,EAAA,EAAOa,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,WACE,cAAC,gBAAD,CAAeX,GAAG,QAAlB,SACE,eAACW,EAAA,EAAIC,KAAL,WACE,mBAAGf,UAAU,yBADf,aAKDT,EACC,eAACyB,EAAA,EAAD,CAAaC,MAAO1B,EAAS2B,KAAML,GAAG,WAAtC,UACE,cAAC,gBAAD,CAAeV,GAAG,WAAlB,SACE,eAACa,EAAA,EAAYG,KAAb,WACE,mBAAGnB,UAAU,gBADf,eAIF,eAACgB,EAAA,EAAYG,KAAb,CAAkBC,QApCf,WACnBC,QAAQC,IAAI,UACZ3B,GC+CwB,SAACA,GAC3B4B,aAAaC,WAAW,YACxB7B,EAAS,CAAE8B,KAAM3E,IACjB6C,EAAS,CAAE8B,KAAM3C,KACjBa,EAAS,CAAE8B,KAAM7D,ODlDfiC,EAAS,MAiCO,UACE,mBAAGG,UAAU,wBADf,gBAKF,cAAC,gBAAD,CAAeG,GAAG,SAAlB,SACE,eAACW,EAAA,EAAIC,KAAL,WACE,mBAAGf,UAAU,uBADf,cAMHT,GAAYA,EAASmC,SACpB,eAACV,EAAA,EAAD,CAAaC,MAAM,QAAQJ,GAAG,aAA9B,UACE,cAAC,gBAAD,CAAeV,GAAG,kBAAlB,SACE,eAACa,EAAA,EAAYG,KAAb,WACE,mBAAGnB,UAAU,iBADf,cAIF,cAAC,gBAAD,CAAeG,GAAG,qBAAlB,SACE,eAACa,EAAA,EAAYG,KAAb,WACE,mBAAGnB,UAAU,kBADf,iBAIF,cAAC,gBAAD,CAAeG,GAAG,mBAAlB,SACE,eAACa,EAAA,EAAYG,KAAb,WACE,mBAAGnB,UAAU,gBADf,iC,6EE5DP2B,GAbM,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACxC,OACE,8BACE,eAACC,GAAA,EAAD,CAAOF,QAASA,EAAS7B,UAAU,OAAnC,UACE,cAAC+B,GAAA,EAAMC,QAAP,CAAehC,UAAU,OAAOQ,MAAO,CAAEyB,SAAU,QAAnD,SACGL,IAEFE,QCVII,GAAgB,gBAChBC,GAAmB,mBACnBC,GAAoB,oBACpBC,GAA2B,2BAC3BC,GAAa,aCIbC,GAAY,SAAC1B,EAAI2B,GAAL,8CAAkB,WAAO7C,EAAU8C,GAAjB,iBAAAC,EAAA,sEAClBC,IAAMC,IAAN,wBAA2B/B,IADT,gBACjCgC,EADiC,EACjCA,KAERlD,EAAS,CACP8B,KAAMS,GACNY,QAAS,CACPC,QAASF,EAAKG,IACd9B,KAAM2B,EAAK3B,KACX+B,MAAOJ,EAAKI,MACZC,MAAOL,EAAKK,MACZC,SAAUN,EAAKM,SACfX,cAIJjB,aAAa6B,QAAQ,YAAaC,KAAKC,UAAUb,IAAWc,KAAKC,YAfxB,2CAAlB,yDCkJVC,GA1IF,WACX,IAAM5D,EAAWC,eACTe,EAAO6C,eAAP7C,GAEF2B,EADc,IAAImB,gBAAgBC,SAASC,SAASC,QAC7BlB,IAAI,YAE3BjD,EAAWC,cAEjBmE,qBAAU,WACJlD,GACFlB,EAAS4C,GAAU1B,EAAI2B,MAExB,CAAC7C,EAAUkB,EAAI2B,IAElB,IACQgB,EADKhE,aAAY,SAACC,GAAD,OAAWA,EAAM8D,QAClCC,UACRnC,QAAQC,IAAI,eAAgBkC,GAE5B,IAAMhC,EAAa,SAACX,GAClBQ,QAAQC,IAAI,SAAUT,GACtBlB,EDV0B,SAACkB,GAAD,OAAQ,SAAClB,EAAU8C,GAC/C9C,EAAS,CACP8B,KAAMU,GACNW,QAASjC,IAGXU,aAAa6B,QAAQ,YAAaC,KAAKC,UAAUb,IAAWc,KAAKC,aCItDQ,CAAenD,KAO1B,OACE,gCACE,eAAC,QAAD,CAAMV,GAAG,IAAIK,MAAO,CAAEyD,eAAgB,QAAtC,UACE,mBAAGjE,UAAU,sBADf,WAGA,eAACkE,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,sCACqB,GAApBZ,EAAUa,OACT,cAAC,GAAD,CAAczC,QAAQ,QAAQC,QAAQ,QAAtC,gCAIA,cAACyC,GAAA,EAAD,UACGd,EAAUe,KAAI,SAACC,GAAD,OACb,eAACC,GAAA,EAAD,CAAkCzE,UAAU,OAA5C,UACE,eAACkE,EAAA,EAAD,CAAKlE,UAAU,YAAf,UACE,cAACmE,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACM,GAAA,EAAD,CACErE,IAAG,UAAKsE,yBAAL,OAAsCH,EAAKvB,OAC9C1C,IAAKiE,EAAKtD,KACV0D,OAAK,EACLC,SAAO,MAGX,cAACV,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,QAAD,CACEjE,GAAE,mBAAcqE,EAAKzB,SACrBvC,MAAO,CAAEyD,eAAgB,QAF3B,SAIE,6BAAKO,EAAKtD,WAGd,eAACiD,EAAA,EAAD,CAAKC,GAAI,EAAT,iBAAcI,EAAKtB,SACnB,cAACiB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACU,GAAA,EAAKC,QAAN,CACEC,GAAG,SACHnD,QAAQ,eACRrB,MAAO,CACLyE,SAAU,QAEZC,MAAOV,EAAKhC,SACZ2C,SAAU,SAACC,GAAD,OACRzF,EACE4C,GAAUiC,EAAKzB,QAASsC,OAAOD,EAAEE,OAAOJ,UAG5CK,KAAK,KAZP,SAcG,aAAIC,MAAMhB,EAAKrB,UAAUsC,QAAQlB,KAAI,SAACmB,GAAD,OACpC,wBAAsBR,MAAOQ,EAAM,EAAnC,SACGA,EAAM,GADIA,EAAM,UAMzB,cAACvB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,qBACE3C,KAAK,SACLL,QAAS,kBAAMI,EAAWgD,EAAKzB,UAFjC,SAIE,mBAAG/C,UAAU,wBAInB,oBAAIA,UAAU,YAAYQ,MAAO,CAAEmF,MAAO,aAlDxBnB,EAAKzB,iBAwDjC,cAACoB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACwB,GAAA,EAAD,CAAM5F,UAAU,qBAAhB,SACE,eAACsE,GAAA,EAAD,WACE,cAACG,GAAA,EAAD,CAAezE,UAAU,iBAAzB,SACE,+BACE,sBAAMQ,MAAO,CAAEyB,SAAU,UAAzB,yBADF,KAEGuB,EAAUqC,QAAO,SAACC,EAAKtB,GAAN,OAAesB,EAAMtB,EAAKhC,WAAU,GAAI,IAF5D,cAMF,cAACiC,GAAA,EAAD,CAAezE,UAAU,iBAAzB,SACE,oBAAGQ,MAAO,CAAEyB,SAAU,UAAtB,iBAEGuB,EACEqC,QAAO,SAACC,EAAKtB,GAAN,OAAesB,EAAMtB,EAAKhC,SAAWgC,EAAKtB,QAAO,GACxD6C,QAAQ,QAGf,cAACtB,GAAA,EAAD,CAAezE,UAAU,oBAAzB,SACE,wBACEyB,KAAK,SACLzB,UAAU,WACVoB,QAjGO,WACrBvB,EAAS,6BAiGKmG,SAA+B,IAArBxC,EAAUa,OACpB7D,MAAO,CACLyF,aAAc,MACdC,OAAQ,QAPZ,4CC/DDC,GApEA,SAAC,GAA4B,IAA1BjB,EAAyB,EAAzBA,MAAOkB,EAAkB,EAAlBA,KAAMT,EAAY,EAAZA,MAC7B,OACE,sBAAK3F,UAAU,SAAf,UACE,+BACE,mBACEQ,MAAO,CAAEmF,SACT3F,UACEkF,GAAS,EACL,cACAA,GAAS,GACT,uBACA,kBAIV,+BACE,mBACE1E,MAAO,CAAEmF,SACT3F,UACEkF,GAAS,EACL,cACAA,GAAS,IACT,uBACA,kBAIV,+BACE,mBACE1E,MAAO,CAAEmF,SACT3F,UACEkF,GAAS,EACL,cACAA,GAAS,IACT,uBACA,kBAIV,+BACE,mBACE1E,MAAO,CAAEmF,SACT3F,UACEkF,GAAS,EACL,cACAA,GAAS,IACT,uBACA,kBAIV,+BACE,mBACE1E,MAAO,CAAEmF,SACT3F,UACEkF,GAAS,EACL,cACAA,GAAS,IACT,uBACA,kBAIV,+BAAOkB,GAAQA,QCrCNC,GAvBC,SAAC,GAAiB,IAAftD,EAAc,EAAdA,QACjB,OACE,cAAC,QAAD,CAAM5C,GAAE,mBAAc4C,EAAQC,KAAOxC,MAAO,CAAEyD,eAAgB,QAA9D,SACE,eAAC2B,GAAA,EAAD,CAAM5F,UAAU,yBAAhB,UACE,cAAC4F,GAAA,EAAKtG,OAAN,UAAcyD,EAAQ7B,OACtB,cAAC0E,GAAA,EAAKU,IAAN,CAAUjG,IAAG,UAAKsE,yBAAL,OAAsC5B,EAAQE,SAC3D,eAAC2C,GAAA,EAAKW,KAAN,WACE,cAACX,GAAA,EAAKY,KAAN,UACE,8BACE,cAAC,GAAD,CACEtB,MAAOnC,EAAQ0D,OACfL,KAAI,WAAMrD,EAAQ2D,WAAd,YACJf,MAAK,gBAIX,cAACC,GAAA,EAAKY,KAAN,wBAAgBzD,EAAQG,kB,UCCnByD,GAnBK,WAClB,OACE,8BACE,cAACC,GAAA,EAAD,CACEC,UAAU,SACVC,KAAK,SACLtG,MAAO,CACL0F,OAAQ,OACRzF,MAAO,OACPsG,OAAQ,OACRpG,QAAS,SAPb,SAUE,sBAAMX,UAAU,kBAAhB,6BChBKgH,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBAEtBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBAEtBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBACtBC,GAAuB,uBAEvBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBACtBC,GAAuB,uBAEvBC,GAAgC,gCAChCC,GAAgC,gCAChCC,GAA6B,6BAC7BC,GAA8B,8BCC9BC,GAAe,yDAAM,WAAO1I,GAAP,iBAAA+C,EAAA,sEAE9B/C,EAAS,CAAE8B,KAAMuF,KAFa,SAIPrE,IAAMC,IAAI,kBAJH,gBAItBC,EAJsB,EAItBA,KACRlD,EAAS,CAAE8B,KAAMwF,GAAsBnE,QAASD,IALlB,gDAQ9BlD,EAAS,CACP8B,KAAMyF,GACNpE,QACE,KAAMwF,UAAY,KAAMA,SAASzF,KAAK0F,OAClC,KAAMD,SAASzF,KAAK0F,OACpB,KAAMC,UAbgB,yDAAN,uDAkBfC,GAAoB,SAAC5H,GAAD,8CAAQ,WAAOlB,GAAP,iBAAA+C,EAAA,sEAErC/C,EAAS,CAAE8B,KAAM0F,KAFoB,SAGdxE,IAAMC,IAAN,wBAA2B/B,IAHb,gBAG7BgC,EAH6B,EAG7BA,KACRlD,EAAS,CAAE8B,KAAM2F,GAAwBtE,QAASD,IAJb,gDAMrClD,EAAS,CACP8B,KAAM4F,GACNvE,QACE,KAAMwF,UAAY,KAAMA,SAASzF,KAAK0F,OAClC,KAAMD,SAASzF,KAAK0F,OACpB,KAAMC,UAXuB,yDAAR,uDCFlBE,GAlCF,WACX,IAAM/I,EAAWC,cACX+I,EAAcnJ,aAAY,SAACC,GAAD,OAAWA,EAAMkJ,eAEzCC,EAA6BD,EAA7BC,MAAOC,EAAsBF,EAAtBE,QAASC,EAAaH,EAAbG,SAQxB,OANA/E,qBAAU,WACR1C,QAAQC,IAAI,sBACZ3B,EAAS0I,QAER,CAAC1I,IAGF,gCACE,4CACCkJ,EACC,cAAC,GAAD,IACED,EACF,cAAC,GAAD,CAAchH,QAAQ,QAAQC,QAAQ,UAAtC,SACG+G,IAGH,cAAC1E,EAAA,EAAD,UACG4E,EAASvE,KAAI,SAACxB,GAAD,OACZ,cAACoB,EAAA,EAAD,CAAuB4E,GAAI,GAAI3E,GAAI,EAAG4E,GAAI,EAAGC,GAAI,EAAjD,SACE,cAAC,GAAD,CAASlG,QAASA,KADVA,EAAQC,c,2BCkOfkG,GAzOK,WAClB,IAAMrJ,EAAWC,eACTe,EAAO6C,eAAP7C,GACR,EAAgCsI,mBAAS,GAAzC,mBAAO3G,EAAP,KAAiB4G,EAAjB,KACA,EAA4BD,mBAAS,GAArC,mBAAO1C,EAAP,KAAe4C,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEM5J,EAAWC,cAEX4J,EAAgBhK,aAAY,SAACC,GAAD,OAAWA,EAAM+J,iBAC3CX,EAA4BW,EAA5BX,QAASD,EAAmBY,EAAnBZ,MAAO7F,EAAYyG,EAAZzG,QAElB0G,EAAsBjK,aAAY,SAACC,GAAD,OAAWA,EAAMgK,uBAE9CC,EAGPD,EAHFZ,QACOc,EAELF,EAFFb,MACSgB,EACPH,EADFI,QAIMtK,EADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAERwE,qBAAU,WACJ6F,IACFP,EAAU,GACVE,EAAW,IACX5J,EAAS,CAAE8B,KAAM2G,MAEnBzI,EAAS8I,GAAkB5H,MAC1B,CAAClB,EAAUkB,EAAI+I,IAYlB,OACE,gCACE,eAAC,QAAD,CAAMzJ,GAAG,IAAIK,MAAO,CAAEyD,eAAgB,QAAtC,UACE,mBAAGjE,UAAU,sBADf,WAIC6I,EACC,cAAC,GAAD,IACED,EACF,cAAC,GAAD,CAAchH,QAAQ,QAAQC,QAAQ,UAAtC,SACG+G,IAGH,gCACE,eAAC1E,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACM,GAAA,EAAD,CACErE,IAAG,UAAKsE,yBAAL,OAAsC5B,EAAQE,OACjD1C,IAAKwC,EAAQ7B,KACb0D,OAAK,MAGT,cAACT,EAAA,EAAD,UACE,gCACE,cAACM,GAAA,EAAD,CAAezE,UAAU,OAAzB,SACE,6BAAK+C,EAAQ7B,SAEf,cAACuD,GAAA,EAAD,CAAezE,UAAU,OAAzB,SACE,cAAC,GAAD,CACEkF,MAAOnC,EAAQ0D,OACfL,KAAI,UAAKrD,EAAQ2D,WAAb,YACJf,MAAO,cAGX,cAAClB,GAAA,EAAD,UACE,sCAAM1B,EAAQG,WAEhB,cAACuB,GAAA,EAAD,CAAezE,UAAU,OAAzB,SACE,4BAAI+C,EAAQ+G,qBAIlB,cAAC3F,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACwB,GAAA,EAAD,CAAM5F,UAAU,qBAAhB,SACE,eAACsE,GAAA,EAAD,WACE,cAACG,GAAA,EAAD,CAAezE,UAAU,YAAzB,SACE,eAACkE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,qBACA,eAACA,EAAA,EAAD,kBAAOpB,EAAQG,cAGnB,oBAAIlD,UAAU,OAAOQ,MAAO,CAAEmF,MAAO,aACrC,cAAClB,GAAA,EAAD,CAAezE,UAAU,YAAzB,SACE,cAACkE,EAAA,EAAD,UACGnB,EAAQI,SAAW,EAClB,cAACgB,EAAA,EAAD,CAAKnE,UAAU,eAAf,sBAEA,cAACmE,EAAA,EAAD,CAAKnE,UAAU,YAAf,8BAIN,oBAAIA,UAAU,OAAOQ,MAAO,CAAEmF,MAAO,aACpC5C,EAAQI,SAAW,GAClB,cAACsB,GAAA,EAAD,CAAezE,UAAU,YAAzB,SACE,eAACkE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,CAAK4F,GAAG,OAAR,SACE,cAACjF,GAAA,EAAKC,QAAN,CACEC,GAAG,SACHE,MAAO1C,EACP2C,SAAU,SAACC,GAAD,OAAOgE,EAAYhE,EAAEE,OAAOJ,QACtCK,KAAK,KAJP,SAMG,aAAIC,MAAMzC,EAAQI,UAAUsC,QAAQlB,KAAI,SAACmB,GAAD,OACvC,wBAAsBR,MAAOQ,EAAM,EAAnC,SACGA,EAAM,GADIA,EAAM,eAS/B,cAACjB,GAAA,EAAD,CAAezE,UAAU,oBAAzB,SACE,wBACEyB,KAAK,SACLzB,UAAU,WACVoB,QAjGK,WACvBC,QAAQC,IAAI,iBAAkBT,GAC9BhB,EAAS,SAAD,OAAUgB,EAAV,qBAAyB2B,KAgGfwD,SAA8B,GAApBjD,EAAQI,SAClB3C,MAAO,CACLyF,aAAc,OANlB,qCAgBV,eAAC/B,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGpE,UAAU,OAAtB,UACE,gDACC0J,GAAiB,cAAC,GAAD,IACjBE,GACC,cAAC,GAAD,CAAc/H,QAAQ,UAAUD,QAAQ,aAAxC,8BAID+H,GACC,cAAC,GAAD,CAAc9H,QAAQ,SAASD,QAAQ,QAAvC,SACG+H,IAGJpK,EACC,eAACuF,GAAA,EAAD,CAAMkF,SAxHE,SAAC5E,GF2GvB,IAAC6E,EAAWC,EE1GV9E,EAAE+E,iBACFxK,GFyGDsK,EEzG8BpJ,EFyGnBqJ,EEzGuB,CAAEzD,SAAQ6C,WFyG7C,uCAAuB,WAAO3J,EAAU8C,GAAjB,uBAAAC,EAAA,sEAEnB/C,EAAS,CACP8B,KAAMwG,KAHW,EAQfxF,IADWlD,EAPI,EAOjBG,UAAaH,SAET6K,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/K,EAASgL,SAZnB,SAgBI5H,IAAM6H,KAAN,wBACJP,EADI,aAErBC,EACAE,GAnBiB,gBAgBXvH,EAhBW,EAgBXA,KAMRlD,EAAS,CACP8B,KAAMyG,GACNpF,QAASD,IAxBQ,kDA2BnBlD,EAAS,CACP8B,KAAM0G,GACNrF,QACE,KAAMwF,UAAY,KAAMA,SAASzF,KAAK0F,OAClC,KAAMD,SAASzF,KAAK0F,OACpB,KAAMC,UAhCK,0DAAvB,2DEac,UACE,eAACiC,GAAA,EAAD,CAAWC,UAAU,SAArB,UACE,cAACC,GAAA,EAAD,UACE,8CAEF,eAACC,GAAA,EAAD,CACE5F,GAAG,SACHE,MAAOuB,EACPtB,SAAU,SAACC,GAAD,OAAOiE,EAAUjE,EAAEE,OAAOJ,QACpC1E,MAAO,CAAEqK,gBAAiB,uBAJ5B,UAME,wBAAQ3F,MAAM,GAAd,oBACA,wBAAQA,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,yBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,iCAGJ,eAACuF,GAAA,EAAD,CAAWC,UAAU,UAArB,UACE,cAACC,GAAA,EAAD,CAAW3K,UAAU,OAArB,SACE,+CAEF,cAAC4K,GAAA,EAAD,CACE5F,GAAG,WACHE,MAAOoE,EACPnE,SAAU,SAACC,GAAD,OAAOmE,EAAWnE,EAAEE,OAAOJ,aAGzC,wBACEzD,KAAK,SACLzB,UAAU,gBACVgG,SAAU0D,EACVlJ,MAAO,CACLyF,aAAc,MACdxF,MAAO,SANX,uBAaF,eAAC,GAAD,CAAcoB,QAAQ,OAAtB,oBACS,cAAC,QAAD,CAAM1B,GAAG,SAAT,mBADT,2BAKJ,eAACgE,EAAA,EAAD,CAAKC,GAAI,EAAGpE,UAAU,OAAtB,UACE,yCAC2B,GAA1B+C,EAAQ+H,QAAQzG,QACf,mBAAG7D,MAAO,CAAEmF,MAAO,WAAnB,4BAEF,8BACG5C,EAAQ+H,QAAQvG,KAAI,SAAC2F,GAAD,OACnB,eAACtE,GAAA,EAAD,CAAuB5F,UAAU,iBAAjC,UACE,oBAAGA,UAAU,YAAb,UACE,wBAAQQ,MAAO,CAAEyB,SAAU,QAA3B,SACGiI,EAAOhJ,OAEV,uBAAMV,MAAO,CAAEmF,MAAO,WAAtB,UACG,IADH,KAEKuE,EAAOa,UAAUC,UAAU,EAAG,UAGrC,cAAC,GAAD,CAAQ9F,MAAOgF,EAAOzD,OAAQd,MAAO,YACrC,mBAAG3F,UAAU,OAAb,SAAqBkK,EAAOZ,YAXnBY,EAAOlH,uB,SC5NrBiI,GAZO,SAAC,GAAkB,IAAhBnJ,EAAe,EAAfA,SACvB,OACE,cAAC5B,EAAA,EAAD,UACE,cAACgE,EAAA,EAAD,CAAKlE,UAAU,4BAAf,SACE,cAACmE,EAAA,EAAD,CAAK4F,GAAI,GAAI3F,GAAI,EAAjB,SACGtC,SCiFIoJ,GAxEG,WAChB,IAAMrL,EAAWC,eACjB,EAA0BqJ,mBAAS,IAAnC,mBAAOgC,EAAP,KAAcC,EAAd,KACA,EAAgCjC,mBAAS,IAAzC,mBAAOkC,EAAP,KAAiBC,EAAjB,KAEM3L,EAAWC,cAEX2L,EAAM,IAAI5H,gBAAgBC,SAASC,SAASC,QAC5C0H,EAAWD,EAAIE,IAAI,YAAcF,EAAI3I,IAAI,YAAc,IAEvDlD,EAAYF,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCmJ,EAA6BnJ,EAA7BmJ,QAASD,EAAoBlJ,EAApBkJ,MAAOrJ,EAAaG,EAAbH,SAExBwE,qBAAU,WACR1C,QAAQC,IAAI,iBAAkBkK,GAC1BjM,IACFM,EAAS,GAAD,OAAI2L,IACZnK,QAAQC,IAAI,cAAekK,MAE5B,CAAC3L,EAAU2L,EAAUjM,IAOxB,OACE,eAAC,GAAD,WACE,wCACCqJ,GACC,cAAC,GAAD,CAAchH,QAAQ,QAAQC,QAAQ,SAAtC,0CAIDgH,GAAW,cAAC,GAAD,IACZ,eAAC/D,GAAA,EAAD,CAAMkF,SAdY,SAAC5E,GACrBA,EAAE+E,iBACFxK,EbdiB,SAACwL,EAAOE,GAAR,8CAAqB,WAAO1L,GAAP,mBAAA+C,EAAA,sEAEtC/C,EAAS,CACP8B,KAAM9E,IAGFyN,EAAS,CACbC,QAAS,CACP,eAAgB,qBARkB,SAYf1H,IAAM6H,KAC3B,oBACA,CACEkB,SAAUP,EACVE,SAAUA,GAEZjB,GAlBoC,gBAY9BvH,EAZ8B,EAY9BA,KASRlD,EAAS,CACP8B,KAAM7E,EACNkG,QAASD,IAGXtB,aAAa6B,QAAQ,WAAYC,KAAKC,UAAUT,IA1BV,kDA4BtClD,EAAS,CACP8B,KAAM5E,EACNiG,QACE,KAAMwF,UAAY,KAAMA,SAASzF,KAAK0F,OAClC,KAAMD,SAASzF,KAAK0F,OACpB,KAAMC,UAjCwB,0DAArB,sDacRmD,CAAMR,EAAOE,KAYpB,UACE,eAACZ,GAAA,EAAD,CAAWC,UAAU,QAArB,UACE,cAACC,GAAA,EAAD,CAAW3K,UAAU,OAArB,mBACA,cAAC4K,GAAA,EAAD,CACEnJ,KAAK,QACLmK,YAAY,oBACZ1G,MAAOiG,EACPhG,SAAU,SAACC,GAAD,OAAOgG,EAAShG,EAAEE,OAAOJ,aAGvC,eAACuF,GAAA,EAAD,CAAWC,UAAU,WAArB,UACE,cAACC,GAAA,EAAD,CAAW3K,UAAU,OAArB,sBACA,cAAC4K,GAAA,EAAD,CACEnJ,KAAK,WACLmK,YAAY,WACZ1G,MAAOmG,EACPlG,SAAU,SAACC,GAAD,OAAOkG,EAAYlG,EAAEE,OAAOJ,aAG1C,qBAAKlF,UAAU,eAAf,SACE,cAAC6L,GAAA,EAAD,CAAQpK,KAAK,SAASzB,UAAU,2BAAhC,yBAKJ,cAACkE,EAAA,EAAD,CAAKlE,UAAU,OAAf,SACE,eAACmE,EAAA,EAAD,uBACY,IACV,cAAC,QAAD,CAAMhE,GAAIqL,EAAQ,6BAAyBA,GAAa,YAAxD,+BCyCKM,GAxGM,WACnB,IAAMjM,EAAWC,eACjB,EAAwBqJ,mBAAS,IAAjC,mBAAOjI,EAAP,KAAa6K,EAAb,KACA,EAA0B5C,mBAAS,IAAnC,mBAAOgC,EAAP,KAAcC,EAAd,KACA,EAAgCjC,mBAAS,IAAzC,mBAAOkC,EAAP,KAAiBC,EAAjB,KACA,EAAwCnC,mBAAS,IAAjD,mBAAO6C,EAAP,KAAqBC,EAArB,KACA,EAA8B9C,mBAAS,IAAvC,mBAAOX,EAAP,KAAgB0D,EAAhB,KAEMvM,EAAWC,cAEX2L,EAAM,IAAI5H,gBAAgBC,SAASC,SAASC,QAC5C0H,EAAWD,EAAIE,IAAI,YAAcF,EAAI3I,IAAI,YAAc,IAEvDuJ,EAAe3M,aAAY,SAACC,GAAD,OAAWA,EAAM0M,gBAC1CtD,EAA6BsD,EAA7BtD,QAASD,EAAoBuD,EAApBvD,MAAOrJ,EAAa4M,EAAb5M,SAExBwE,qBAAU,WACJxE,GACFM,EAAS,GAAD,OAAI2L,MAEb,CAAC3L,EAAU2L,EAAUjM,IAWxB,OACE,eAAC,GAAD,WACE,0CACCiJ,GACC,cAAC,GAAD,CAAc5G,QAAQ,QAAQC,QAAQ,SAAtC,SACG2G,IAGJI,GACC,cAAC,GAAD,CAAchH,QAAQ,QAAQC,QAAQ,SAAtC,SACG+G,IAGJC,GAAW,cAAC,GAAD,IACZ,eAAC/D,GAAA,EAAD,CAAMkF,SAvBY,SAAC5E,GACrBA,EAAE+E,iBACEkB,IAAaW,EACfE,EAAW,0BAEXvM,Ed2BkB,SAACuB,EAAMiK,EAAOE,GAAd,8CAA2B,WAAO1L,GAAP,mBAAA+C,EAAA,sEAE/C/C,EAAS,CACP8B,KAAM1E,IAGFqN,EAAS,CACbC,QAAS,CACP,eAAgB,qBAR2B,SAYxB1H,IAAM6H,KAC3B,uBACA,CACEtJ,KAAMA,EACNiK,MAAOA,EACPE,SAAUA,GAEZjB,GAnB6C,gBAYvCvH,EAZuC,EAYvCA,KAURlD,EAAS,CACP8B,KAAMzE,EACN8F,QAASD,IAGXlD,EAAS,CACP8B,KAAM7E,EACNkG,QAASD,IAGXtB,aAAa6B,QAAQ,WAAYC,KAAKC,UAAUT,IAhCD,kDAkC/ClD,EAAS,CACP8B,KAAMxE,EACN6F,QACE,KAAMwF,UAAY,KAAMA,SAASzF,KAAK0F,OAClC,KAAMD,SAASzF,KAAK0F,OACpB,KAAMC,UAvCiC,0DAA3B,sDc3BT4D,CAASlL,EAAMiK,EAAOE,KAkB/B,UACE,eAACZ,GAAA,EAAD,CAAWC,UAAU,OAArB,UACE,cAACC,GAAA,EAAD,CAAW3K,UAAU,OAArB,kBACA,cAAC4K,GAAA,EAAD,CACEyB,UAAQ,EACR5K,KAAK,OACLmK,YAAY,YACZ1G,MAAOhE,EACPiE,SAAU,SAACC,GAAD,OAAO2G,EAAQ3G,EAAEE,OAAOJ,aAGtC,eAACuF,GAAA,EAAD,CAAWC,UAAU,QAArB,UACE,cAACC,GAAA,EAAD,CAAW3K,UAAU,OAArB,mBACA,cAAC4K,GAAA,EAAD,CACEyB,UAAQ,EACR5K,KAAK,QACLmK,YAAY,oBACZ1G,MAAOiG,EACPhG,SAAU,SAACC,GAAD,OAAOgG,EAAShG,EAAEE,OAAOJ,aAGvC,eAACuF,GAAA,EAAD,CAAWC,UAAU,WAArB,UACE,cAACC,GAAA,EAAD,CAAW3K,UAAU,OAArB,sBACA,cAAC4K,GAAA,EAAD,CACEyB,UAAQ,EACR5K,KAAK,WACLmK,YAAY,WACZ1G,MAAOmG,EACPlG,SAAU,SAACC,GAAD,OAAOkG,EAAYlG,EAAEE,OAAOJ,aAG1C,eAACuF,GAAA,EAAD,CAAWC,UAAU,eAArB,UACE,cAACC,GAAA,EAAD,CAAW3K,UAAU,OAArB,8BACA,cAAC4K,GAAA,EAAD,CACEyB,UAAQ,EACR5K,KAAK,WACLmK,YAAY,WACZ1G,MAAO8G,EACP7G,SAAU,SAACC,GAAD,OAAO6G,EAAgB7G,EAAEE,OAAOJ,aAG9C,qBAAKlF,UAAU,eAAf,SACE,cAAC6L,GAAA,EAAD,CAAQpK,KAAK,SAASzB,UAAU,2BAAhC,2BAKJ,cAACkE,EAAA,EAAD,CAAKlE,UAAU,OAAf,SACE,eAACmE,EAAA,EAAD,iCACsB,IACpB,cAAC,QAAD,CAAMhE,GAAIqL,EAAQ,0BAAsBA,GAAa,SAArD,6BCZKc,GAzFC,a,SC6CDC,GAnDG,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACxC,OACE,eAAC7L,EAAA,EAAD,CAAKd,UAAU,8BAA8BQ,MAAO,CAAEoM,SAAU,SAAhE,UACE,cAACC,GAAA,EAAD,UACGL,EACC,cAAC,gBAAD,CAAerM,GAAG,SAAlB,SACE,cAACW,EAAA,EAAIC,KAAL,CAAUf,UAAU,OAApB,qBAGF,cAACc,EAAA,EAAIC,KAAL,CAAUf,UAAU,OAAOgG,UAAQ,EAAnC,qBAKJ,cAAC6G,GAAA,EAAD,UACGJ,EACC,cAAC,gBAAD,CAAetM,GAAG,YAAlB,SACE,cAACW,EAAA,EAAIC,KAAL,CAAUf,UAAU,OAApB,wBAGF,cAACc,EAAA,EAAIC,KAAL,CAAUf,UAAU,OAAOgG,UAAQ,EAAnC,wBAKJ,cAAC6G,GAAA,EAAD,UACGH,EACC,cAAC,gBAAD,CAAevM,GAAG,WAAlB,SACE,cAACW,EAAA,EAAIC,KAAL,CAAUf,UAAU,OAApB,uBAGF,cAACc,EAAA,EAAIC,KAAL,CAAUf,UAAU,OAAOgG,UAAQ,EAAnC,uBAKJ,cAAC6G,GAAA,EAAD,UACGF,EACC,cAAC,gBAAD,CAAexM,GAAG,WAAlB,SACE,cAACW,EAAA,EAAIC,KAAL,CAAUf,UAAU,OAApB,6BAGF,cAACc,EAAA,EAAIC,KAAL,CAAUf,UAAU,OAAOgG,UAAQ,EAAnC,iCCyCK8G,GA1EE,WACf,IAAMjN,EAAWC,eAETiN,EADKvN,aAAY,SAACC,GAAD,OAAWA,EAAM8D,QAClCwJ,gBAEFpN,EAAWC,cAEjB,EAA8BuJ,mBAAS4D,EAAgBC,SAAvD,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAgC9D,mBAAS4D,EAAgBG,UAAzD,mBAAOA,EAAP,KAAiBC,EAAjB,KACA,EAAwBhE,mBAAS4D,EAAgBK,MAAjD,mBAAOA,EAAP,KAAaC,EAAb,KACA,EAA8BlE,mBAAS4D,EAAgBO,SAAvD,mBAAOA,EAAP,KAAgBC,EAAhB,KAQA,OACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAWf,OAAK,EAACC,OAAK,IACtB,+CACA,mDACA,eAAC3H,GAAA,EAAD,CAAMkF,SAXU,SAAC5E,GdSY,IAACvC,EcRhCuC,EAAE+E,iBACFxK,GdOgCkD,EcPH,CAAEmK,UAASE,WAAUE,OAAME,WdOf,SAAC3N,GAC5CA,EAAS,CACP8B,KAAMW,GACNU,QAASD,IAGXtB,aAAa6B,QAAQ,kBAAmBC,KAAKC,UAAUT,OcZrDhD,EAAS,aAQP,UACE,eAAC4K,GAAA,EAAD,CAAWC,UAAU,UAArB,UACE,cAACC,GAAA,EAAD,CAAW3K,UAAU,OAArB,qBACA,cAAC4K,GAAA,EAAD,CACEyB,UAAQ,EACR5K,KAAK,OACLmK,YAAY,UACZ1G,MAAO8H,EACP7H,SAAU,SAACC,GAAD,OAAO6H,EAAW7H,EAAEE,OAAOJ,aAGzC,eAACuF,GAAA,EAAD,CAAWC,UAAU,WAArB,UACE,cAACC,GAAA,EAAD,CAAW3K,UAAU,OAArB,sBACA,cAAC4K,GAAA,EAAD,CACEyB,UAAQ,EACR5K,KAAK,OACLmK,YAAY,WACZ1G,MAAOgI,EACP/H,SAAU,SAACC,GAAD,OAAO+H,EAAY/H,EAAEE,OAAOJ,UAExC,eAACuF,GAAA,EAAD,CAAWC,UAAU,OAArB,UACE,cAACC,GAAA,EAAD,CAAW3K,UAAU,OAArB,kBACA,cAAC4K,GAAA,EAAD,CACEyB,UAAQ,EACR5K,KAAK,OACLmK,YAAY,OACZ1G,MAAOkI,EACPjI,SAAU,SAACC,GAAD,OAAOiI,EAAQjI,EAAEE,OAAOJ,UAEpC,eAACuF,GAAA,EAAD,CAAWC,UAAU,UAArB,UACE,cAACC,GAAA,EAAD,CAAW3K,UAAU,OAArB,qBACA,cAAC4K,GAAA,EAAD,CACEyB,UAAQ,EACR5K,KAAK,OACLmK,YAAY,UACZ1G,MAAOoI,EACPnI,SAAU,SAACC,GAAD,OAAOmI,EAAWnI,EAAEE,OAAOJ,mBAK7C,qBAAKlF,UAAU,eAAf,SACE,cAAC6L,GAAA,EAAD,CAAQpK,KAAK,SAASzB,UAAU,2BAAhC,+B,SCcKwN,GA7EC,WACd,IAAM3N,EAAWC,eAIXH,GAHOH,aAAY,SAACC,GAAD,OAAWA,EAAM8D,QAClCwJ,gBAESnN,eAEjB,EAA0CuJ,mBAAS,UAAnD,mBAAOsE,EAAP,KAAsBC,EAAtB,KAQA,OACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAWlB,OAAK,EAACC,OAAK,EAACC,OAAK,IAC5B,+CACA,iDACA,eAAC5H,GAAA,EAAD,CAAMkF,SAXY,SAAC5E,GfmBQ,IAACvC,EelB9BuC,EAAE+E,iBACFxK,GfiB8BkD,EejBH4K,EfiBY,SAAC9N,GAC1CA,EAAS,CACP8B,KAAMY,GACNS,QAASD,IAGXtB,aAAa6B,QAAQ,gBAAiBC,KAAKC,UAAUT,OetBnDhD,EAAS,kBAQP,UACE,eAAC4K,GAAA,EAAD,WACE,cAACE,GAAA,EAAD,CAAW3K,UAAU,OAAOgF,GAAG,SAA/B,SACE,mBAAGxE,MAAO,CAAEyB,SAAU,QAAtB,uCAEF,eAACkC,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,UACE,sBAAKlE,UAAU,2CAAf,UACE,cAAC2N,GAAA,EAAD,CACElM,KAAK,QACLmM,MAAM,SACN/M,GAAG,SACHK,KAAK,UACL2M,SAAO,EACP1I,SAAU,SAACC,GAAD,OAAOsI,EAAiBtI,EAAEE,OAAOJ,UAE7C,mBAAGlF,UAAU,uBAGjB,cAACkE,EAAA,EAAD,UACE,sBAAKlE,UAAU,2CAAf,UACE,cAAC2N,GAAA,EAAD,CACE3H,UAAQ,EACRvE,KAAK,QACLmM,MAAM,aACN/M,GAAG,YACHK,KAAK,UACLiE,SAAU,SAACC,GAAD,OAAOsI,EAAiBtI,EAAEE,OAAOJ,UAE7C,mBAAGlF,UAAU,wBAGjB,cAACkE,EAAA,EAAD,UACE,sBAAKlE,UAAU,2CAAf,UACE,cAAC2N,GAAA,EAAD,CACE3H,UAAQ,EACRvE,KAAK,QACLmM,MAAM,WACN/M,GAAG,YACHK,KAAK,UACLiE,SAAU,SAACC,GAAD,OAAOsI,EAAiBtI,EAAEE,OAAOJ,UAE7C,mBAAGlF,UAAU,mCAKrB,qBAAKA,UAAU,eAAf,SACE,cAAC6L,GAAA,EAAD,CAAQpK,KAAK,SAASzB,UAAU,2BAAhC,+BC2EK8N,GA9IM,WACnB,IAAMjO,EAAWC,eACXiO,EAAcvO,aAAY,SAACC,GAAD,OAAWA,EAAMsO,eACzClE,EAA0BkE,EAA1BlE,QAASmE,EAAiBD,EAAjBC,MAAOpF,EAAUmF,EAAVnF,MAClBjJ,EAAWC,cACX2D,EAAO/D,aAAY,SAACC,GAAD,OAAWA,EAAM8D,QAE1CA,EAAK0K,WAAa1K,EAAKC,UACpBqC,QAAO,SAACC,EAAKtB,GAAN,OAAesB,EAAMtB,EAAKtB,MAAQsB,EAAKhC,WAAU,GACxDuD,QAAQ,GAEX,IAAMmI,EAAM7K,KAAK8K,MAAM5M,aAAa6M,QAAQ,kBAC5C/M,QAAQC,IAAI,YAAa4M,GAEzBnK,qBAAU,WACJ8F,IACFhK,EAAS,UAAD,OAAWmO,EAAMhL,MACzBrD,EAAS,CAAE8B,KAAMtD,OAElB,CAAC0L,EAAShK,IAcb,OACE,gCACE,cAAC,GAAD,CAAW2M,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IAClC,+CACA,eAACzI,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,cAACE,GAAA,EAAD,UACE,eAACG,GAAA,EAAD,WACE,kDACA,qBAAKzE,UAAU,2BAAf,SACE,8BACGuD,EAAKwJ,gBAAgBC,QACtB,uBACCzJ,EAAKwJ,gBAAgBG,SACtB,uBACC3J,EAAKwJ,gBAAgBK,KACtB,uBACC7J,EAAKwJ,gBAAgBO,kBAK9B,cAAChJ,GAAA,EAAD,CAAWtE,UAAU,OAAO6B,QAAQ,QAApC,SACE,eAAC4C,GAAA,EAAD,WACE,gDACA,qBAAKzE,UAAU,2BAAf,SACE,8BACE,mBAAGA,UAAU,kBACZuD,EAAKkK,wBAKd,cAACnJ,GAAA,EAAD,CAAWtE,UAAU,OAArB,SACE,eAACyE,GAAA,EAAD,WACE,6CAC2B,IAA1BlB,EAAKC,UAAUa,OACd,cAAC,GAAD,CAAczC,QAAQ,QAAQC,QAAQ,UAAtC,gCAIA,cAACyC,GAAA,EAAD,UACGf,EAAKC,UAAUe,KAAI,SAACC,EAAM3D,GAAP,OAClB,eAAC4D,GAAA,EAAD,WACE,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACM,GAAA,EAAD,CACErE,IAAG,UAAKsE,yBAAL,OAAsCH,EAAKvB,OAC9C1C,IAAKiE,EAAKtD,KACV0D,OAAK,EACLC,SAAO,MAGX,cAACV,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,QAAD,CACEjE,GAAE,mBAAcqE,EAAKzB,SACrBvC,MAAO,CAAEyD,eAAgB,QAF3B,SAIE,6BAAKO,EAAKtD,WAGd,eAACiD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACGI,EAAKhC,SADR,UACsBgC,EAAKtB,YAG7B,oBAAIlD,UAAU,YAAYQ,MAAO,CAAEmF,MAAO,aAtBxB9E,gBA8BhC,cAACsD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACwB,GAAA,EAAD,CAAM5F,UAAU,qBAAhB,SACE,eAACsE,GAAA,EAAD,WACE,cAACG,GAAA,EAAD,CAAezE,UAAU,iBAAzB,SACE,8CAEF,cAACyE,GAAA,EAAD,CAAezE,UAAU,sBAAzB,SACE,gDAEF,cAACyE,GAAA,EAAD,CAAezE,UAAU,iBAAzB,SACE,sCAAMuD,EAAK0K,gBAEb,cAACxJ,GAAA,EAAD,UACGmE,GAAS,cAAC,GAAD,CAAc/G,QAAQ,SAAtB,SAAgC+G,MAE5C,cAACnE,GAAA,EAAD,CAAezE,UAAU,oBAAzB,SACE,wBACEyB,KAAK,SACLL,QAvGK,WACnBC,QAAQC,IAAI,mBACZ3B,ECduB,SAACqO,GAAD,8CAAW,WAAOrO,EAAU8C,GAAjB,uBAAAC,EAAA,sEAElC/C,EAAS,CACP8B,KAAMzD,IAH0B,EAU9ByE,IADWlD,EATmB,EAShCG,UAAaH,SAET6K,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/K,EAASgL,SAdJ,SAmBX5H,IAAM6H,KAAN,mBAA+BwD,EAAO5D,GAnB3B,gBAmB1BvH,EAnB0B,EAmB1BA,KAERlD,EAAS,CACP8B,KAAMxD,EACN6E,QAASD,IAGXlD,EAAS,CACP8B,KAAMa,GACNQ,QAASD,IAGXtB,aAAaC,WAAW,aA/BU,kDAiClC7B,EAAS,CACP8B,KAAMvD,EACN4E,QACE,KAAMwF,UAAY,KAAMA,SAASzF,KAAK0F,OAClC,KAAMD,SAASzF,KAAK0F,OACpB,KAAMC,UAtCoB,0DAAX,wDDerB6F,CAAY,CACVC,WAAY/K,EAAKC,UACjBuJ,gBAAiBxJ,EAAKwJ,gBACtBU,cAAelK,EAAKkK,cACpBQ,WAAY1K,EAAK0K,eAiGPjO,UAAU,WACVQ,MAAO,CACLyF,aAAc,MACdC,OAAQ,QANZ,2C,SEyFDqI,GA3MG,WAChB,MAA4BpF,oBAAS,GAArC,mBAAOqF,EAAP,KAAeC,EAAf,KACQ5N,EAAO6C,eAAP7C,GACFlB,EAAWC,cAEX2D,GADWzD,eACJN,aAAY,SAACC,GAAD,OAAWA,EAAM8D,SAEpCmL,EAAelP,aAAY,SAACC,GAAD,OAAWA,EAAMiP,gBAC1C7F,EAA0B6F,EAA1B7F,QAASmF,EAAiBU,EAAjBV,MAAOpF,EAAU8F,EAAV9F,MAElB+F,EAAWnP,aAAY,SAACC,GAAD,OAAWA,EAAMkP,YAC7BC,EAAoCD,EAA7C9F,QAA8BgG,EAAeF,EAAxB9E,QAEvBiF,EAAetP,aAAY,SAACC,GAAD,OAAWA,EAAMqP,gBACRC,GAAmBD,EAArDjG,QAAqDiG,EAA5BjF,SAEfrK,aAAY,SAACC,GAAD,OAAWA,EAAMC,aACvCH,SAEHsJ,GAAYD,IACfoF,EAAMC,WAAaD,EAAMM,WACtBzI,QAAO,SAACC,EAAKtB,GAAN,OAAesB,EAAMtB,EAAKtB,MAAQsB,EAAKhC,WAAU,GACxDuD,QAAQ,IAebhC,qBAAU,YACHiK,GAASA,EAAMhL,MAAQqC,OAAOxE,IAAOgO,GAAcE,GACtDpP,EAAS,CAAE8B,KAAM/C,IACjBiB,EAAS,CAAE8B,KAAMpC,KAEjBM,EDEyB,SAACkB,GAAD,8CAAQ,WAAOlB,EAAU8C,GAAjB,uBAAAC,EAAA,sEAEnC/C,EAAS,CACP8B,KAAMrD,IAH2B,EAU/BqE,IADWlD,EAToB,EASjCG,UAAaH,SAET6K,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/K,EAASgL,SAdH,SAmBZ5H,IAAMC,IAAN,sBAAyB/B,EAAzB,KAAgCuJ,GAnBpB,gBAmB3BvH,EAnB2B,EAmB3BA,KAERlD,EAAS,CACP8B,KAAMpD,EACNyE,QAASD,IAvBwB,kDA0BnClD,EAAS,CACP8B,KAAMnD,EACNwE,QACE,KAAMwF,UAAY,KAAMA,SAASzF,KAAK0F,OAClC,KAAMD,SAASzF,KAAK0F,OACpB,KAAMC,UA/BqB,0DAAR,wDCFhBwG,CAAgBnO,KACfmN,EAAMiB,SACXC,OAAOC,OAGVV,GAAU,GAtBW,WACzB,IAAMW,EAASxL,SAASyL,cAAc,UACtCD,EAAO3N,KAAO,kBACd2N,EAAO/O,IACL,2HACF+O,EAAOE,OAAQ,EACfF,EAAOG,OAAS,WACdd,GAAU,IAEZ7K,SAAS4L,KAAKC,YAAYL,GAWtBM,MAKH,CAAC1B,EAAOnN,EAAIlB,EAAUkP,EAAYE,IAUrC,OAAOlG,EACL,cAAC,GAAD,IACED,EACF,cAAC,GAAD,CAAc/G,QAAQ,SAAtB,SAAgC+G,IAEhC,gCACE,+CACA,eAAC1E,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,cAACE,GAAA,EAAD,UACE,eAACG,GAAA,EAAD,WACE,kDACA,qBAAKzE,UAAU,2BAAf,SACE,8BACGuD,EAAKwJ,gBAAgBC,QACtB,uBACCzJ,EAAKwJ,gBAAgBG,SACtB,uBACC3J,EAAKwJ,gBAAgBK,KACtB,uBACC7J,EAAKwJ,gBAAgBO,kBAK9B,cAAChJ,GAAA,EAAD,CAAWtE,UAAU,OAAO6B,QAAQ,QAApC,SACE,eAAC4C,GAAA,EAAD,WACE,gDACA,qBAAKzE,UAAU,2BAAf,SACE,8BACE,mBAAGA,UAAU,kBACZgO,EAAMP,wBAKf,cAACnJ,GAAA,EAAD,CAAWtE,UAAU,OAArB,SACE,eAACyE,GAAA,EAAD,WACE,6CAC6B,IAA5BuJ,EAAMM,WAAWjK,OAChB,cAAC,GAAD,CAAczC,QAAQ,QAAQC,QAAQ,UAAtC,iCAIA,cAACyC,GAAA,EAAD,UACG0J,EAAMM,WAAW/J,KAAI,SAACC,EAAM3D,GAAP,OACpB,eAAC4D,GAAA,EAAD,WACE,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACM,GAAA,EAAD,CACErE,IAAG,UAAKsE,yBAAL,OAAsCH,EAAKvB,OAC9C1C,IAAKiE,EAAKtD,KACV0D,OAAK,EACLC,SAAO,MAGX,cAACV,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,QAAD,CACEjE,GAAE,mBAAcqE,EAAKzB,SACrBvC,MAAO,CAAEyD,eAAgB,QAF3B,SAIE,6BAAKO,EAAKtD,WAGd,eAACiD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACGI,EAAKhC,SADR,UACsBgC,EAAKtB,YAG7B,oBAAIlD,UAAU,YAAYQ,MAAO,CAAEmF,MAAO,aAtBxB9E,gBAyChC,eAACsD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,cAACwB,GAAA,EAAD,CAAM5F,UAAU,qBAAhB,SACE,eAACsE,GAAA,EAAD,WACE,cAACG,GAAA,EAAD,CAAezE,UAAU,iBAAzB,SACE,8CAEF,cAACyE,GAAA,EAAD,CAAezE,UAAU,sBAAzB,SACE,gDAEF,cAACyE,GAAA,EAAD,CAAezE,UAAU,iBAAzB,SACE,sCAAMgO,EAAMC,iBAEZD,EAAMiB,QACN,eAACxK,GAAA,EAAD,WACGmK,GAAc,cAAC,GAAD,IACbJ,EAGA,cAAC,gBAAD,CACEmB,OAAQ3B,EAAMC,WACd2B,UAnHM,SAACC,GACzBlQ,ED2BoB,SAACkB,EAAIgP,GAAL,8CAAuB,WAAOlQ,EAAU8C,GAAjB,uBAAAC,EAAA,sEAE3C/C,EAAS,CACP8B,KAAMlD,IAHmC,EAQvCkE,IADWlD,EAP4B,EAOzCG,UAAaH,SAET6K,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/K,EAASgL,SAZK,SAgBpB5H,IAAMmN,IAAN,sBACNjP,EADM,SAErBgP,EACAzF,GAnByC,gBAgBnCvH,EAhBmC,EAgBnCA,KAMRlD,EAAS,CACP8B,KAAMjD,EACNsE,QAASD,IAxBgC,kDA2B3ClD,EAAS,CACP8B,KAAMhD,EACNqE,QACE,KAAMwF,UAAY,KAAMA,SAASzF,KAAK0F,OAClC,KAAMD,SAASzF,KAAK0F,OACpB,KAAMC,UAhC6B,0DAAvB,wDC3BXuH,CAASlP,EAAIgP,OA8GN,cAAC,GAAD,YAYV,cAACpL,GAAA,EAAD,CAAezE,UAAU,YAAzB,SACGgO,EAAMiB,OACL,eAAC,GAAD,CAAcrN,QAAQ,iBAAiBC,QAAQ,UAA/C,qBACWmM,EAAMgC,OAAOhF,UAAU,EAAG,OAGrC,cAAC,GAAD,CAAcpJ,QAAQ,iBAAiBC,QAAQ,UAA/C,4BAKJ,cAAC4C,GAAA,EAAD,CAAezE,UAAU,YAAzB,SACGgO,EAAMiC,YACL,eAAC,GAAD,CAAcrO,QAAQ,kBAAkBC,QAAQ,UAAhD,0BACgBmM,EAAMkC,YAAYlF,UAAU,EAAG,OAG/C,cAAC,GAAD,CAAcpJ,QAAQ,kBAAkBC,QAAQ,UAAhD,2C,UC5ICsO,GApEE,WACf,IAAMxQ,EAAWC,cACXwQ,EAAW5Q,aAAY,SAACC,GAAD,OAAWA,EAAM2Q,YACtCvH,EAA0BuH,EAA1BvH,QAASD,EAAiBwH,EAAjBxH,MAAOyH,EAAUD,EAAVC,MAGPC,EADE9Q,aAAY,SAACC,GAAD,OAAWA,EAAM8Q,cACxC1G,QAER9F,qBAAU,WACRpE,EtBgLuB,uCAAM,WAAOA,EAAU8C,GAAjB,uBAAAC,EAAA,sEAE7B/C,EAAS,CACP8B,KAAMhE,IAHqB,EAUzBgF,IADWlD,EATc,EAS3BG,UAAaH,SAET6K,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/K,EAASgL,SAdT,SAmBN5H,IAAMC,IAAN,cAAyBwH,GAnBnB,gBAmBrBvH,EAnBqB,EAmBrBA,KAERlD,EAAS,CACP8B,KAAM/D,EACNoF,QAASD,IAvBkB,kDA0B7BlD,EAAS,CACP8B,KAAM9D,EACNmF,QACE,KAAMwF,UAAY,KAAMA,SAASzF,KAAK0F,OAClC,KAAMD,SAASzF,KAAK0F,OACpB,KAAMC,UA/Be,0DAAN,2DsB/KtB,CAAC7I,EAAU2Q,IAEd,IAAME,EAAe,SAAC3P,GAChBqO,OAAOuB,QAAQ,iBACjB9Q,EtB+MoB,SAACkB,GAAD,8CAAQ,WAAOlB,EAAU8C,GAAjB,uBAAAC,EAAA,sEAE9B/C,EAAS,CACP8B,KAAM5D,IAHsB,EAQ1B4E,IADWlD,EAPe,EAO5BG,UAAaH,SAET6K,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/K,EAASgL,SAZR,SAgBP5H,IAAM+N,OAAN,4BAAkC7P,EAAlC,KAAyCuJ,GAhBlC,gBAgBtBvH,EAhBsB,EAgBtBA,KAERlD,EAAS,CACP8B,KAAM3D,EACNgF,QAASD,IApBmB,kDAuB9BlD,EAAS,CACP8B,KAAM1D,EACN+E,QACE,KAAMwF,UAAY,KAAMA,SAASzF,KAAK0F,OAClC,KAAMD,SAASzF,KAAK0F,OACpB,KAAMC,UA5BgB,0DAAR,wDsB/MXmI,CAAW9P,KAIxB,OACE,gCACE,uCACCgI,EACC,cAAC,GAAD,IACED,EACF,cAAC,GAAD,CAAc/G,QAAQ,SAASD,QAAQ,QAAvC,SACGgH,IAGH,eAACgI,GAAA,EAAD,CAAO5Q,UAAU,oDAAjB,UACE,kCACE,+BACE,oCACA,sCACA,uCACA,0CAEF,0BAEF,gCACGqQ,EAAM9L,KAAI,SAACsM,GAAD,OACT,+BACE,6BAAKA,EAAKhQ,KACV,6BAAKgQ,EAAK3P,OACV,6BAAK2P,EAAK1F,QACV,6BACG0F,EAAKnP,QACJ,mBAAG1B,UAAU,iBAEb,mBAAGA,UAAU,mBAGjB,6BACE,cAAC6L,GAAA,EAAD,CACE7L,UAAU,uBACVoB,QAAS,kBAAMoP,EAAaK,EAAKhQ,KAFnC,SAIE,mBAAGb,UAAU,uBAhBV6Q,EAAKhQ,gBCyFbiQ,GA5HK,WAClB,IAAMjR,EAAWC,eACXH,EAAWC,cACX+I,EAAcnJ,aAAY,SAACC,GAAD,OAAWA,EAAMkJ,eACzCE,EAA6BF,EAA7BE,QAASD,EAAoBD,EAApBC,MAAOE,EAAaH,EAAbG,SAElBiI,EAAgBvR,aAAY,SAACC,GAAD,OAAWA,EAAMsR,iBAExCC,EAGPD,EAHFlI,QACOoI,EAELF,EAFFnI,MACS0H,EACPS,EADFlH,QAGIqH,EAAgB1R,aAAY,SAACC,GAAD,OAAWA,EAAMyR,iBAExCC,EAIPD,EAJFrI,QACOuI,EAGLF,EAHFtI,MACSyI,EAEPH,EAFFrH,QACSyH,EACPJ,EADFnO,QAGFgB,qBAAU,WACRpE,EAAS,CAAE8B,KAAMmG,KAEbyJ,EACFxR,EAAS,kBAAD,OAAmByR,EAAetO,IAAlC,UAERrD,EAAS0I,QAEV,CAAC1I,EAAU2Q,EAAee,EAAeC,IAE5C,IAAMd,EAAe,SAAC3P,GAChBqO,OAAOuB,QAAQ,oBACjB9Q,EdauB,SAACkB,GAAD,8CAAQ,WAAOlB,EAAU8C,GAAjB,mBAAAC,EAAA,sEAEjC/C,EAAS,CACP8B,KAAM6F,KAHyB,EAQ7B7E,IADWlD,EAPkB,EAO/BG,UAAaH,SAET6K,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/K,EAASgL,SAZL,SAgBV5H,IAAM+N,OAAN,+BAAqC7P,GAAMuJ,GAhBjC,cAgBzBvH,KAERlD,EAAS,CACP8B,KAAM8F,KAnByB,kDAsBjC5H,EAAS,CACP8B,KAAM+F,GACN1E,QACE,KAAMwF,UAAY,KAAMA,SAASzF,KAAK0F,OAClC,KAAMD,SAASzF,KAAK0F,OACpB,KAAMC,UA3BmB,0DAAR,wDcbd+I,CAAc1Q,KAS3B,OACE,gCACE,eAACqD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,4CAEF,cAACA,EAAA,EAAD,CACE3D,MAAO,CAAEG,QAAS,OAAQ6Q,eAAgB,YAC1CxR,UAAU,aAFZ,SAIE,eAAC6L,GAAA,EAAD,CACE7L,UAAU,uBACVoB,QAjBkB,SAAC2B,GAC3B1B,QAAQC,IAAI,iBACZ3B,EduCyB,uCAAM,WAAOA,EAAU8C,GAAjB,uBAAAC,EAAA,sEAE/B/C,EAAS,CACP8B,KAAMgG,KAHuB,EAQ3BhF,IADWlD,EAPgB,EAO7BG,UAAaH,SAET6K,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/K,EAASgL,SAZP,SAgBR5H,IAAM6H,KAAN,wBAAoC,GAAIJ,GAhBhC,gBAgBvBvH,EAhBuB,EAgBvBA,KAERlD,EAAS,CACP8B,KAAMiG,GACN5E,QAASD,IApBoB,kDAuB/BlD,EAAS,CACP8B,KAAMkG,GACN7E,QACE,KAAMwF,UAAY,KAAMA,SAASzF,KAAK0F,OAClC,KAAMD,SAASzF,KAAK0F,OACpB,KAAMC,UA5BiB,0DAAN,0DcvBjBhI,MAAO,CAAE0F,OAAQ,OAAQuL,UAAW,QAHtC,UAKE,mBAAGzR,UAAU,cAAb,eALF,uBASHgR,GAAiB,cAAC,GAAD,IACjBC,GACC,cAAC,GAAD,CAAcpP,QAAQ,SAASD,QAAQ,QAAvC,SACGqP,IAIJE,GAAiB,cAAC,GAAD,IACjBC,GACC,cAAC,GAAD,CAAcvP,QAAQ,SAASD,QAAQ,QAAvC,SACGwP,IAIJvI,EACC,cAAC,GAAD,IACED,EACF,cAAC,GAAD,CAAc/G,QAAQ,SAASD,QAAQ,QAAvC,SACGgH,IAGH,eAACgI,GAAA,EAAD,CAAO5Q,UAAU,oDAAjB,UACE,kCACE,+BACE,oCACA,sCACA,uCACA,6CAEF,0BAEF,gCACG8I,EAASvE,KAAI,SAACxB,GAAD,OACZ,+BACE,6BAAKA,EAAQC,MACb,6BAAKD,EAAQ7B,OACb,sCAAM6B,EAAQG,SACd,6BAAKH,EAAQI,WACb,+BACE,cAAC,gBAAD,CACEhD,GAAE,yBAAoB4C,EAAQC,IAA5B,SACFxC,MAAO,CAAEkR,OAAQ,UAAWC,YAAa,QAF3C,SAIE,cAAC9F,GAAA,EAAD,CAAQ7L,UAAU,uBAAlB,SACE,mBAAGA,UAAU,oBAGjB,cAAC6L,GAAA,EAAD,CACE7L,UAAU,uBACVoB,QAAS,kBAAMoP,EAAazN,EAAQC,MAFtC,SAIE,mBAAGhD,UAAU,wBAlBV+C,EAAQC,iBCuEhB4O,GAtKK,WAClB,IAAQ/Q,EAAO6C,eAAP7C,GACFhB,EAAWC,eAEjB,EAAwBqJ,mBAAS,IAAjC,mBAAOjI,EAAP,KAAa6K,EAAb,KACA,EAA0B5C,mBAAS,GAAnC,mBAAOjG,EAAP,KAAc2O,EAAd,KACA,EAA0B1I,mBAAS,IAAnC,mBAAOlG,EAAP,KAAc6O,EAAd,KACA,EAAgC3I,mBAAS,GAAzC,mBAAOhG,EAAP,KAAiB4O,EAAjB,KACA,EAAsC5I,mBAAS,IAA/C,mBAAOW,EAAP,KAAoBkI,EAApB,KACA,EAAkC7I,oBAAS,GAA3C,mBAAO8I,EAAP,KAAkBC,EAAlB,KAEMvS,EAAWC,cAEX4J,EAAgBhK,aAAY,SAACC,GAAD,OAAWA,EAAM+J,iBAC3CzG,EAA4ByG,EAA5BzG,QAEFoP,GAF8B3I,EAAnBZ,MAAmBY,EAAZX,QAEFrJ,aAAY,SAACC,GAAD,OAAWA,EAAM0S,kBAExCC,EAGPD,EAHFtI,QACOwI,EAELF,EAFFvJ,MACS0J,EACPH,EADFtJ,QAGF9E,qBAAU,WACJqO,GACFzS,EAAS,CAAE8B,KAAMuG,KACjBnI,EAAS,uBAEJkD,EAAQ7B,MAAQ6B,EAAQC,MAAQqC,OAAOxE,IAG1CkL,EAAQhJ,EAAQ7B,MAChB2Q,EAAS9O,EAAQG,OACjB4O,EAAS/O,EAAQE,OACjB8O,EAAYhP,EAAQI,UACpB6O,EAAejP,EAAQ+G,cANvBnK,EAAS8I,GAAkB5H,MAS9B,CAACkC,EAASlC,EAAIlB,EAAUyS,EAAevS,IAE1C,IAeM0S,EAAkB,uCAAG,WAAOnN,GAAP,uBAAA1C,EAAA,6DACnB8P,EAAOpN,EAAEE,OAAOmN,MAAM,IACtBC,EAAW,IAAIC,UAEZC,OAAO,QAASJ,GACzBE,EAASE,OAAO,aAAc/R,GAE9BqR,GAAa,GAPY,SAUjB9H,EAAS,CACbC,QAAS,CACP,eAAgB,wBAZG,SAgBA1H,IAAM6H,KAC3B,wBACAkI,EACAtI,GAnBqB,gBAgBfvH,EAhBe,EAgBfA,KAKRiP,EAASjP,GACTqP,GAAa,GAtBU,kDAwBvBA,GAAa,GAxBU,0DAAH,sDA4BxB,OACE,gCACE,eAAC,QAAD,CAAM/R,GAAG,qBAAqBK,MAAO,CAAEyD,eAAgB,QAAvD,UACE,mBAAGjE,UAAU,sBADf,WAIA,eAAC,GAAD,WACE,8CACCsS,GAAiB,cAAC,GAAD,IACjBD,GACC,cAAC,GAAD,CAAcxQ,QAAQ,SAASD,QAAQ,QAAvC,SACGyQ,IAIL,eAACvN,GAAA,EAAD,CAAMkF,SA1DU,SAAC5E,GACrBA,EAAE+E,iBACF9I,QAAQC,IAAI,mBACZ3B,EfqEyB,SAACoD,GAAD,8CAAa,WAAOpD,EAAU8C,GAAjB,uBAAAC,EAAA,sEAEtC/C,EAAS,CACP8B,KAAMoG,KAH8B,EAQlCpF,IADWlD,EAPuB,EAOpCG,UAAaH,SAET6K,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/K,EAASgL,SAZA,SAgBf5H,IAAMmN,IAAN,+BACG/M,EAAQC,IADX,KAErBD,EACAqH,GAnBoC,gBAgB9BvH,EAhB8B,EAgB9BA,KAMRlD,EAAS,CACP8B,KAAMqG,GACNhF,QAASD,IAGXlD,EAAS,CACP8B,KAAM2F,GACNtE,QAASD,IA7B2B,kDAgCtClD,EAAS,CACP8B,KAAMsG,GACNjF,QACE,KAAMwF,UAAY,KAAMA,SAASzF,KAAK0F,OAClC,KAAMD,SAASzF,KAAK0F,OACpB,KAAMC,UArCwB,0DAAb,wDepEvBqK,CAAc,CACZ7P,IAAKnC,EACLK,OACAgC,QACAD,QACA6G,cACA3G,eAgDA,UACE,eAAC2B,GAAA,EAAKgO,MAAN,CAAYpI,UAAU,OAAtB,UACE,cAAC5F,GAAA,EAAKiO,MAAN,CAAY/S,UAAU,OAAtB,kBACA,cAAC8E,GAAA,EAAKC,QAAN,CACEtD,KAAK,OACLmK,YAAY,eACZ1G,MAAOhE,EACPiE,SAAU,SAACC,GAAD,OAAO2G,EAAQ3G,EAAEE,OAAOJ,aAItC,eAACJ,GAAA,EAAKgO,MAAN,CAAYpI,UAAU,QAAtB,UACE,cAAC5F,GAAA,EAAKiO,MAAN,CAAY/S,UAAU,OAAtB,mBACA,cAAC8E,GAAA,EAAKC,QAAN,CACEtD,KAAK,SACLmK,YAAY,gBACZ1G,MAAOhC,EACPiC,SAAU,SAACC,GAAD,OAAOyM,EAASzM,EAAEE,OAAOJ,aAIvC,eAACJ,GAAA,EAAKgO,MAAN,CAAYpI,UAAU,QAAtB,UACE,cAAC5F,GAAA,EAAKiO,MAAN,CAAY/S,UAAU,OAAtB,mBACA,cAAC8E,GAAA,EAAKC,QAAN,CACEtD,KAAK,OACLmK,YAAY,gBACZ1G,MAAOjC,EACPkC,SAAU,SAACC,GAAD,OAAO0M,EAAS1M,EAAEE,OAAOJ,aAIvC,eAACJ,GAAA,EAAKgO,MAAN,CAAYpI,UAAU,WAAtB,UACE,cAAC5F,GAAA,EAAKiO,MAAN,CAAY/S,UAAU,OAAtB,oBACA,cAAC8E,GAAA,EAAKC,QAAN,CAActD,KAAK,OAAO0D,SAAUoN,OAGtC,eAACzN,GAAA,EAAKgO,MAAN,CAAYpI,UAAU,WAAtB,UACE,cAAC5F,GAAA,EAAKiO,MAAN,CAAY/S,UAAU,OAAtB,+BACA,cAAC8E,GAAA,EAAKC,QAAN,CACEtD,KAAK,SACLmK,YAAY,WACZ1G,MAAO/B,EACPgC,SAAU,SAACC,GAAD,OAAO2M,EAAY3M,EAAEE,OAAOJ,aAI1C,eAACJ,GAAA,EAAKgO,MAAN,CAAYpI,UAAU,cAAtB,UACE,cAAC5F,GAAA,EAAKiO,MAAN,CAAY/S,UAAU,OAAtB,yBACA,cAAC8E,GAAA,EAAKC,QAAN,CACEtD,KAAK,OACLmK,YAAY,oBACZ1G,MAAO4E,EACP3E,SAAU,SAACC,GAAD,OAAO4M,EAAe5M,EAAEE,OAAOJ,UAE1C+M,GAAa,cAAC,GAAD,OAGhB,qBAAKjS,UAAU,eAAf,SACE,cAAC6L,GAAA,EAAD,CAAQpK,KAAK,SAASzB,UAAU,2BAAhC,gCC5FGgT,GArEG,WAChB,IAAMrT,EAAWC,cACXqT,EAAYzT,aAAY,SAACC,GAAD,OAAWA,EAAMwT,aACvCpK,EAA2BoK,EAA3BpK,QAASD,EAAkBqK,EAAlBrK,MAAOsK,EAAWD,EAAXC,OAMxB,OAJAnP,qBAAU,WACRpE,ELiKqB,uCAAM,WAAOA,EAAU8C,GAAjB,uBAAAC,EAAA,sEAE3B/C,EAAS,CACP8B,KAAM1C,KAHmB,EAQvB0D,IADWlD,EAPY,EAOzBG,UAAaH,SAET6K,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY/K,EAASgL,SAZX,SAgBJ5H,IAAMC,IAAN,eAA0BwH,GAhBtB,gBAgBnBvH,EAhBmB,EAgBnBA,KAERlD,EAAS,CACP8B,KAAMzC,GACN8D,QAASD,IApBgB,kDAuB3BlD,EAAS,CACP8B,KAAMxC,GACN6D,QACE,KAAMwF,UAAY,KAAMA,SAASzF,KAAK0F,OAClC,KAAMD,SAASzF,KAAK0F,OACpB,KAAMC,UA5Ba,0DAAN,2DKhKpB,CAAC7I,IAGF,gCACE,wCACCkJ,EACC,cAAC,GAAD,IACED,EACF,cAAC,GAAD,CAAc/G,QAAQ,SAASD,QAAQ,QAAvC,SACGgH,IAGH,eAACgI,GAAA,EAAD,CAAO5Q,UAAU,oDAAjB,UACE,kCACE,+BACE,oCACA,sCACA,sCACA,6CACA,gDACA,oDAEF,0BAEF,gCACGkT,EAAO3O,KAAI,SAACyJ,GAAD,OACV,+BACE,6BAAKA,EAAMhL,MACX,6BAAKgL,EAAM6C,MAAQ7C,EAAM6C,KAAK3P,OAC9B,6BAAK8M,EAAMjD,UAAUC,UAAU,EAAG,MAClC,sCAAMgD,EAAMC,cACZ,6BACGD,EAAMiB,OACLjB,EAAMgC,OAAOhF,UAAU,EAAG,IAE1B,mBAAGhL,UAAU,mBAGjB,6BACGgO,EAAMiC,YACLjC,EAAMkC,YAAYlF,UAAU,EAAG,IAE/B,mBAAGhL,UAAU,mBAGjB,6BACE,cAAC,gBAAD,CACEG,GAAE,iBAAY6N,EAAMhL,KACpBxC,MAAO,CAAEkR,OAAQ,UAAWC,YAAa,QAF3C,SAIE,cAAC9F,GAAA,EAAD,CAAQ7L,UAAU,uBAAlB,2BAxBGgO,EAAMhL,iBCMdmQ,OA3Bf,WACE,OACE,sBAAKnT,UAAU,OAAf,UACE,cAAC,GAAD,IACA,cAACE,EAAA,EAAD,CAAWF,UAAU,OAArB,SACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAOoT,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,GAAD,MAC/B,cAAC,KAAD,CAAOF,OAAK,EAACC,KAAK,eAAeC,QAAS,cAAC,GAAD,MAC1C,cAAC,KAAD,CAAOF,OAAK,EAACC,KAAK,QAAQC,QAAS,cAAC,GAAD,MACnC,cAAC,KAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,GAAD,MACnC,cAAC,KAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,KAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,GAAD,MACjC,cAAC,KAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,GAAD,MACjC,cAAC,KAAD,CAAOD,KAAK,kBAAkBC,QAAS,cAAC,GAAD,MACvC,cAAC,KAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,GAAD,MAChC,cAAC,KAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,GAAD,MACrC,cAAC,KAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,GAAD,MAClC,cAAC,KAAD,CAAOD,KAAK,kBAAkBC,QAAS,cAAC,GAAD,MACvC,cAAC,KAAD,CAAOD,KAAK,qBAAqBC,QAAS,cAAC,GAAD,MAC1C,cAAC,KAAD,CAAOD,KAAK,0BAA0BC,QAAS,cAAC,GAAD,MAC/C,cAAC,KAAD,CAAOD,KAAK,mBAAmBC,QAAS,cAAC,GAAD,eC5BnCC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,4CCuBRQ,GAAUC,2BAAgB,CAC9BtL,YCAgC,WAAuC,IAAtClJ,EAAqC,uDAA7B,CAAEqJ,SAAU,IAAMoL,EAAW,uCACtE,OAAQA,EAAOzS,MAEb,KAAKuF,GACH,MAAO,CAAE6B,SAAS,EAAMC,SAAU,IAGpC,KAAK7B,GACH,MAAO,CAAE4B,SAAS,EAAOC,SAAUoL,EAAOpR,SAG5C,KAAKoE,GACH,MAAO,CAAE2B,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,QACE,OAAOrD,IDdX+J,cCoBkC,WAG9B,IAFJ/J,EAEG,uDAFK,CAAEsD,QAAS,CAAE+H,QAAS,KAC9BoJ,EACG,uCACH,OAAQA,EAAOzS,MACb,KAAK0F,GACH,OAAO,cAAE0B,SAAS,GAASpJ,GAE7B,KAAK2H,GACH,MAAO,CAAEyB,SAAS,EAAO9F,QAASmR,EAAOpR,SAE3C,KAAKuE,GACH,MAAO,CAAEwB,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,QACE,OAAOrD,IDlCX8D,KEzByB,WAGrB,IAFJ9D,EAEG,uDAFK,CAAE+D,UAAW,GAAIuJ,gBAAiB,IAC1CmH,EACG,uCACH,OAAQA,EAAOzS,MACb,KAAKS,GACH,IAAMsC,EAAO0P,EAAOpR,QACdqR,EAAa1U,EAAM+D,UAAU4Q,MACjC,SAAClP,GAAD,OAAWA,EAAMnC,UAAYyB,EAAKzB,WAGpC,OAAIoR,EACK,6BACF1U,GADL,IAEE+D,UAAW/D,EAAM+D,UAAUe,KAAI,SAACW,GAAD,OAC7BA,EAAMnC,UAAYoR,EAAWpR,QAAUyB,EAAOU,OAM3C,6BACFzF,GADL,IAEE+D,UAAU,GAAD,oBAAM/D,EAAM+D,WAAZ,CAAuBgB,MAOtC,KAAKrC,GACH,OAAO,6BACF1C,GADL,IAEE+D,UAAW/D,EAAM+D,UAAU6Q,QACzB,SAACC,GAAD,OAASA,EAAIvR,UAAYmR,EAAOpR,aAMtC,KAAKV,GACH,OAAO,6BACF3C,GADL,IAEEsN,gBAAiBmH,EAAOpR,UAG5B,KAAKT,GACH,OAAO,6BACF5C,GADL,IAEEgO,cAAeyG,EAAOpR,UAG1B,KAAKR,GACH,OAAO,6BACF7C,GADL,IAEE+D,UAAW,KAGf,QACE,OAAO/D,IFjCXC,UGV8B,WAAyB,IAAxBD,EAAuB,uDAAf,GAAIyU,EAAW,uCACtD,OAAQA,EAAOzS,MACb,KAAK9E,EACH,MAAO,CAAEkM,SAAS,GAEpB,KAAKjM,EACH,MAAO,CAAEiM,SAAS,EAAOtJ,SAAU2U,EAAOpR,SAE5C,KAAKjG,EACH,MAAO,CAAEgM,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,KAAKhG,EACH,MAAO,GAET,QACE,OAAO2C,IHJX0M,aGQiC,WAAyB,IAAxB1M,EAAuB,uDAAf,GAAIyU,EAAW,uCACzD,OAAQA,EAAOzS,MACb,KAAK1E,EACH,MAAO,CAAE8L,SAAS,GAEpB,KAAK7L,EACH,MAAO,CAAE6L,SAAS,EAAOtJ,SAAU2U,EAAOpR,SAE5C,KAAK7F,EACH,MAAO,CAAE4L,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,KAAKhG,EACH,MAAO,GAET,QACE,OAAO2C,IHtBX8U,WG0B+B,WAAmC,IAAlC9U,EAAiC,uDAAzB,CAAEoR,KAAM,IAAMqD,EAAW,uCACjE,OAAQA,EAAOzS,MACb,KAAKvE,EACH,OAAO,6BAAKuC,GAAZ,IAAmBoJ,SAAS,IAE9B,KAAK1L,EACH,MAAO,CAAE0L,SAAS,EAAOgI,KAAMqD,EAAOpR,SAExC,KAAK1F,EACH,MAAO,CAAEyL,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,QACE,OAAOrD,IHrCX+U,kBGyCsC,WAAyB,IAAxB/U,EAAuB,uDAAf,GAAIyU,EAAW,uCAC9D,OAAQA,EAAOzS,MACb,KAAKpE,EACH,MAAO,CAAEwL,SAAS,GAEpB,KAAKvL,EACH,MAAO,CAAEuL,SAAS,EAAOgB,SAAS,EAAMtK,SAAU2U,EAAOpR,SAE3D,KAAKvF,EACH,MAAO,CAAEsL,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,KAAKtF,EACH,MAAO,GAET,QACE,OAAOiC,IHvDX2Q,SG2D6B,WAAoC,IAAnC3Q,EAAkC,uDAA1B,CAAE4Q,MAAO,IAAM6D,EAAW,uCAChE,OAAQA,EAAOzS,MACb,KAAKhE,EACH,MAAO,CAAEoL,SAAS,GAEpB,KAAKnL,EACH,MAAO,CAAEmL,SAAS,EAAOwH,MAAO6D,EAAOpR,SAEzC,KAAKnF,EACH,MAAO,CAAEkL,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,KAAKlF,EACH,MAAO,CAAEyS,MAAO,IAElB,QACE,OAAO5Q,IHzEXsO,YIdgC,WAAyB,IAAxBtO,EAAuB,uDAAf,GAAIyU,EAAW,uCACxD,OAAQA,EAAOzS,MACb,KAAKzD,EACH,MAAO,CAAE6K,SAAS,GAEpB,KAAK5K,EACH,MAAO,CAAE4K,SAAS,EAAOgB,SAAS,EAAMmE,MAAOkG,EAAOpR,SAExD,KAAK5E,EACH,MAAO,CAAE2K,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,KAAK3E,EACH,MAAO,GACT,QACE,OAAOsB,IJCXiP,aIGiC,WAG7B,IAFJjP,EAEG,uDAFK,CAAEoJ,SAAS,EAAMyF,WAAY,GAAIvB,gBAAiB,IAC1DmH,EACG,uCACH,OAAQA,EAAOzS,MACb,KAAKrD,EACH,OAAO,6BACFqB,GADL,IAEEoJ,SAAS,IAGb,KAAKxK,EACH,MAAO,CAAEwK,SAAS,EAAOmF,MAAOkG,EAAOpR,SAEzC,KAAKxE,EACH,MAAO,CAAEuK,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,QACE,OAAOrD,IJpBXkP,SIwB6B,WAAyB,IAAxBlP,EAAuB,uDAAf,GAAIyU,EAAW,uCACrD,OAAQA,EAAOzS,MACb,KAAKlD,EACH,MAAO,CACLsK,SAAS,GAGb,KAAKrK,EACH,MAAO,CAAEqK,SAAS,EAAOgB,SAAS,GAEpC,KAAKpL,EACH,MAAO,CAAEoK,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,KAAKpE,EACH,MAAO,GAET,QACE,OAAOe,IJxCXqP,aImFiC,WAAyB,IAAxBrP,EAAuB,uDAAf,GAAIyU,EAAW,uCACzD,OAAQA,EAAOzS,MACb,KAAKvC,GACH,MAAO,CACL2J,SAAS,GAGb,KAAK1J,GACH,MAAO,CAAE0J,SAAS,EAAOgB,SAAS,GAEpC,KAAKzK,GACH,MAAO,CAAEyJ,SAAS,EAAOD,MAAOsL,EAAOO,aAEzC,KAAKpV,GACH,MAAO,GAET,QACE,OAAOI,IJnGXiV,YI2CgC,WAAqC,IAApCjV,EAAmC,uDAA3B,CAAEyT,OAAQ,IAAMgB,EAAW,uCACpE,OAAQA,EAAOzS,MACb,KAAK9C,EACH,MAAO,CACLkK,SAAS,GAGb,KAAKjK,GACH,MAAO,CAAEiK,SAAS,EAAOqK,OAAQgB,EAAOpR,SAE1C,KAAKjE,GACH,MAAO,CAAEgK,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,KAAKhE,GACH,MAAO,CAAEoU,OAAQ,IAEnB,QACE,OAAOzT,IJ3DXwT,UI+D8B,WAAqC,IAApCxT,EAAmC,uDAA3B,CAAEyT,OAAQ,IAAMgB,EAAW,uCAClE,OAAQA,EAAOzS,MACb,KAAK1C,GACH,MAAO,CACL8J,SAAS,GAGb,KAAK7J,GACH,MAAO,CAAE6J,SAAS,EAAOqK,OAAQgB,EAAOpR,SAE1C,KAAK7D,GACH,MAAO,CAAE4J,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,QACE,OAAOrD,IJ5EX8Q,WGuE+B,WAAyB,IAAxB9Q,EAAuB,uDAAf,GAAIyU,EAAW,uCACvD,OAAQA,EAAOzS,MACb,KAAK5D,EACH,MAAO,CAAEgL,SAAS,GAEpB,KAAK/K,EACH,MAAO,CAAE+K,SAAS,EAAOgB,SAAS,GAEpC,KAAK9L,EACH,MAAO,CAAE8K,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,QACE,OAAOrD,IHlFXsR,cCyBkC,WAAyB,IAAxBtR,EAAuB,uDAAf,GAAIyU,EAAW,uCAC1D,OAAQA,EAAOzS,MACb,KAAK6F,GACH,MAAO,CAAEuB,SAAS,GAEpB,KAAKtB,GACH,MAAO,CAAEsB,SAAS,EAAOgB,SAAS,GAEpC,KAAKrC,GACH,MAAO,CAAEqB,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,QACE,OAAOrD,IDpCXyR,cCwCkC,WAAyB,IAAxBzR,EAAuB,uDAAf,GAAIyU,EAAW,uCAC1D,OAAQA,EAAOzS,MACb,KAAKgG,GACH,MAAO,CAAEoB,SAAS,GAEpB,KAAKnB,GACH,MAAO,CAAEmB,SAAS,EAAOgB,SAAS,EAAM9G,QAASmR,EAAOpR,SAE1D,KAAK6E,GACH,MAAO,CAAEkB,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,KAAK8E,GACH,MAAO,GAET,QACE,OAAOnI,IDtDX0S,cC0DkC,WAAsC,IAArC1S,EAAoC,uDAA5B,CAAEsD,QAAS,IAAMmR,EAAW,uCACvE,OAAQA,EAAOzS,MACb,KAAKoG,GACH,MAAO,CAAEgB,SAAS,GAEpB,KAAKf,GACH,MAAO,CAAEe,SAAS,EAAOgB,SAAS,EAAM9G,QAASmR,EAAOpR,SAE1D,KAAKiF,GACH,MAAO,CAAEc,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,KAAKkF,GACH,MAAO,CAAEjF,QAAS,IAEpB,QACE,OAAOtD,IDxEXgK,oBC4EwC,WAAyB,IAAxBhK,EAAuB,uDAAf,GAAIyU,EAAW,uCAChE,OAAQA,EAAOzS,MACb,KAAKwG,GACH,MAAO,CAAEY,SAAS,GAEpB,KAAKX,GACH,MAAO,CAAEW,SAAS,EAAOgB,SAAS,GAEpC,KAAK1B,GACH,MAAO,CAAEU,SAAS,EAAOD,MAAOsL,EAAOpR,SAEzC,KAAKsF,GACH,MAAO,GAET,QACE,OAAO3I,MDvFPkV,GAAepT,aAAa6M,QAAQ,aACtC/K,KAAK8K,MAAM5M,aAAa6M,QAAQ,cAChC,GAEEwG,GAAkBrT,aAAa6M,QAAQ,YACzC/K,KAAK8K,MAAM5M,aAAa6M,QAAQ,aAChC,KAOEyG,GAAe,CACnBtR,KAAM,CAAEC,UAAWmR,GAAc5H,gBANJxL,aAAa6M,QAAQ,mBAChD/K,KAAK8K,MAAM5M,aAAa6M,QAAQ,oBAChC,IAKF1O,UAAW,CAAEH,SAAUqV,KAGnBE,GAAa,CAACC,MASLC,GANDC,uBACZjB,GACAa,GACAK,+BAAoBC,mBAAe,WAAf,EAAmBL,MKnEzCM,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,iBAAD,UACE,cAAC,GAAD,QAGJpR,SAAS0R,eAAe,SAM1B/B,O","file":"static/js/main.2d3874e0.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\nexport const USER_DETAIL_REQUEST = 'USER_DETAIL_REQUEST'\nexport const USER_DETAIL_SUCCESS = 'USER_DETAIL_SUCCESS'\nexport const USER_DETAIL_FAIL = 'USER_DETAIL_FAIL'\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\nexport const ORDER_MY_LIST_REQUEST = 'ORDER_MY_LIST_REQUEST'\nexport const ORDER_MY_LIST_SUCCESS = 'ORDER_MY_LIST_SUCCESS'\nexport const ORDER_MY_LIST_FAIL = 'ORDER_MY_LIST_FAIL'\nexport const ORDER_MY_LIST_RESET = 'ORDER_MY_LIST_RESET'\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","export default __webpack_public_path__ + \"static/media/artisan-logo.bd1d6680.png\";","import React from 'react'\nimport { Nav, Navbar, Container, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Sidebar from './Sidebar'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logout } from '../actions/userActions.js'\nimport { useNavigate } from 'react-router-dom'\nimport logo from '../assets/artisan-logo.png'\n\nconst Header = () => {\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const handleLogout = () => {\n    console.log('logout')\n    dispatch(logout())\n    navigate('/')\n  }\n\n  return (\n    <header>\n      <Navbar\n        className=\"navbar navbar-expand-lg navbar-light bg-light\"\n        collapseOnSelect\n      >\n        <Container className=\"container-fluid\">\n          {/* <Sidebar /> */}\n          <LinkContainer to=\"\">\n            <Navbar.Brand className=\"px-3\">\n              <img src={logo} alt=\"Logo\" style={{ width: '200px' }} />\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <div style={{ display: 'flex' }} className=\"align-items-end\">\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav>\n                <LinkContainer to=\"/cart\">\n                  <Nav.Link>\n                    <i className=\"fas fa-shopping-cart\"></i> Cart\n                  </Nav.Link>\n                </LinkContainer>\n\n                {userInfo ? (\n                  <NavDropdown title={userInfo.name} id=\"username\">\n                    <LinkContainer to=\"/profile\">\n                      <NavDropdown.Item>\n                        <i className=\"far fa-user\"></i> Orders\n                      </NavDropdown.Item>\n                    </LinkContainer>\n                    <NavDropdown.Item onClick={handleLogout}>\n                      <i className=\"fas fa-sign-out-alt\"></i> Logout\n                    </NavDropdown.Item>\n                  </NavDropdown>\n                ) : (\n                  <LinkContainer to=\"/login\">\n                    <Nav.Link>\n                      <i className=\"fas fa-sign-in-alt\"></i> Login\n                    </Nav.Link>\n                  </LinkContainer>\n                )}\n\n                {userInfo && userInfo.isAdmin && (\n                  <NavDropdown title=\"Admin\" id=\"admin-menu\">\n                    <LinkContainer to=\"/admin/userlist\">\n                      <NavDropdown.Item>\n                        <i className=\"fas fa-users\"></i> Users\n                      </NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to=\"/admin/productlist\">\n                      <NavDropdown.Item>\n                        <i className=\"fas fa-images\"></i> Products\n                      </NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to=\"/admin/orderlist\">\n                      <NavDropdown.Item>\n                        <i className=\"fas fa-tags\"></i> Orders\n                      </NavDropdown.Item>\n                    </LinkContainer>\n                  </NavDropdown>\n                )}\n              </Nav>\n            </Navbar.Collapse>\n          </div>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import axios from 'axios'\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAIL_REQUEST,\n  USER_DETAIL_SUCCESS,\n  USER_DETAIL_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  //USER_UPDATE_PROFILE_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n} from '../constants/userConstants.js'\nimport { ORDER_MY_LIST_RESET } from '../constants/orderConstants.js'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login/',\n      {\n        username: email,\n        password: password,\n      },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: ORDER_MY_LIST_RESET })\n  dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/register/',\n      {\n        name: name,\n        email: email,\n        password: password,\n      },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAIL_REQUEST,\n    })\n\n    // find who is logged in currently\n    // need to path in token to authorize\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // sending info to view, including token we just got + id of user\n    const { data } = await axios.get(`/api/users/${id}/`, config)\n\n    dispatch({\n      type: USER_DETAIL_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_DETAIL_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    // find who is logged in currently\n    // need to path in token to authorize\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // sending info to view, including token we just got + id of user\n    const { data } = await axios.put(`/api/users/profile/update/`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n\nexport const getUserList = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    // find who is logged in currently\n    // need to path in token to authorize\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // sending info to view, including token we just got + id of user\n    const { data } = await axios.get(`/api/users/`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.delete(`/api/users/delete/${id}/`, config)\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst AlertMessage = ({ heading, variant, children }) => {\n  return (\n    <div>\n      <Alert variant={variant} className=\"py-2\">\n        <Alert.Heading className=\"mb-1\" style={{ fontSize: '20px' }}>\n          {heading}\n        </Alert.Heading>\n        {children}\n      </Alert>\n    </div>\n  )\n}\n\nexport default AlertMessage\n","export const CART_ADD_ITEM = 'CARD_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CARD_REMOVE_ITEM'\nexport const CART_SAVE_ADDRESS = 'CART_SAVE_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\nexport const CART_RESET = 'CART_RESET'\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      stockNum: data.stockNum,\n      quantity,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import { useEffect } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Form,\n  Card,\n  ListGroupItem,\n} from 'react-bootstrap'\nimport AlertMessage from '../components/AlertMessage'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\nimport { useParams } from 'react-router'\n\nconst Cart = () => {\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const queryParams = new URLSearchParams(document.location.search)\n  const quantity = queryParams.get('quantity')\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (id) {\n      dispatch(addToCart(id, quantity))\n    }\n  }, [dispatch, id, quantity])\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n  console.log('cart Items: ', cartItems)\n\n  const removeItem = (id) => {\n    console.log('remove', id)\n    dispatch(removeFromCart(id))\n  }\n\n  const handleCheckout = () => {\n    navigate(`/login?redirect=shipping`)\n  }\n\n  return (\n    <div>\n      <Link to=\"/\" style={{ textDecoration: 'none' }}>\n        <i className=\"fas fa-arrow-left\"></i> Back\n      </Link>\n      <Row>\n        <Col md={8}>\n          <h1>Cart</h1>\n          {cartItems.length == 0 ? (\n            <AlertMessage heading=\"Oops!\" variant=\"light\">\n              Your cart is empty\n            </AlertMessage>\n          ) : (\n            <ListGroup>\n              {cartItems.map((item) => (\n                <ListGroupItem key={item.product} className=\"pb-1\">\n                  <Row className=\"mt-0 mb-1\">\n                    <Col md={2}>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}${item.image}`}\n                        alt={item.name}\n                        fluid\n                        rounded\n                      />\n                    </Col>\n                    <Col md={3}>\n                      <Link\n                        to={`/product/${item.product}`}\n                        style={{ textDecoration: 'none' }}\n                      >\n                        <h6>{item.name}</h6>\n                      </Link>\n                    </Col>\n                    <Col md={3}>£{item.price}</Col>\n                    <Col md={2}>\n                      <Form.Control\n                        as=\"select\"\n                        variant=\"outline-dark\"\n                        style={{\n                          maxWidth: '45px',\n                        }}\n                        value={item.quantity}\n                        onChange={(e) =>\n                          dispatch(\n                            addToCart(item.product, Number(e.target.value))\n                          )\n                        }\n                        size=\"sm\"\n                      >\n                        {[...Array(item.stockNum).keys()].map((num) => (\n                          <option key={num + 1} value={num + 1}>\n                            {num + 1}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                    <Col md={1}>\n                      <div\n                        type=\"button\"\n                        onClick={() => removeItem(item.product)}\n                      >\n                        <i className=\"fas fa-trash\"></i>\n                      </div>\n                    </Col>\n                  </Row>\n                  <hr className=\"mt-0 mb-0\" style={{ color: 'white' }} />\n                </ListGroupItem>\n              ))}\n            </ListGroup>\n          )}\n        </Col>\n        <Col md={4}>\n          <Card className=\"card bg-light mb-3\">\n            <ListGroup>\n              <ListGroupItem className=\"text-dark my-0\">\n                <h5>\n                  <span style={{ fontSize: '1.8rem' }}>Cart total </span> (\n                  {cartItems.reduce((acc, item) => acc + item.quantity, 0)}{' '}\n                  items)\n                </h5>\n              </ListGroupItem>\n              <ListGroupItem className=\"text-dark pt-0\">\n                <p style={{ fontSize: '1.5rem' }}>\n                  £\n                  {cartItems\n                    .reduce((acc, item) => acc + item.quantity * item.price, 0)\n                    .toFixed(2)}\n                </p>\n              </ListGroupItem>\n              <ListGroupItem className=\"d-grid gap-2 pt-1\">\n                <button\n                  type=\"button\"\n                  className=\"btn-dark\"\n                  onClick={handleCheckout}\n                  disabled={cartItems.length === 0}\n                  style={{\n                    borderRadius: '8px',\n                    height: '40px',\n                  }}\n                >\n                  Go to Checkout\n                </button>\n              </ListGroupItem>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Cart\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\nconst Product = ({ product }) => {\n  return (\n    <Link to={`/product/${product._id}`} style={{ textDecoration: 'none' }}>\n      <Card className=\"card border-light mb-3\">\n        <Card.Header>{product.name}</Card.Header>\n        <Card.Img src={`${process.env.REACT_APP_BASE_URL}${product.image}`} />\n        <Card.Body>\n          <Card.Text>\n            <div>\n              <Rating\n                value={product.rating}\n                text={` ${product.numReviews} reviews`}\n                color={`#f8e825`}\n              />\n            </div>\n          </Card.Text>\n          <Card.Text>{`£${product.price}`}</Card.Text>\n        </Card.Body>\n      </Card>\n    </Link>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst LoadSpinner = () => {\n  return (\n    <div>\n      <Spinner\n        animation=\"border\"\n        role=\"status\"\n        style={{\n          height: '50px',\n          width: '50px',\n          margin: 'auto',\n          display: 'block',\n        }}\n      >\n        <span className=\"visually-hidden\">Loading...</span>\n      </Spinner>\n    </div>\n  )\n}\n\nexport default LoadSpinner\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAIL_REQUEST = 'PRODUCT_DETAIL_REQUEST'\nexport const PRODUCT_DETAIL_SUCCESS = 'PRODUCT_DETAIL_SUCCESS'\nexport const PRODUCT_DETAIL_FAIL = 'PRODUCT_DETAIL_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n","import axios from 'axios'\nimport {\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_DETAIL_FAIL,\n  PRODUCT_DETAIL_SUCCESS,\n  PRODUCT_DETAIL_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n} from '../constants/productConstants'\n\n// creating action function\n// Actions are plain JavaScript objects that have a type field.\n// An event that describes something that happened in the application.\n\nexport const listProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n    //this swill set off respective reducer, loading = true, empty array of products\n    const { data } = await axios.get('/api/products/')\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data })\n    // has now set state to data\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n\nexport const listProductDetail = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAIL_REQUEST })\n    const { data } = await axios.get(`/api/products/${id}`)\n    dispatch({ type: PRODUCT_DETAIL_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAIL_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.delete(`/api/products/delete/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/products/create/`, {}, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/products/update/${product._id}/`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: PRODUCT_DETAIL_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n\nexport const createProductReview =\n  (productId, review) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\n      })\n\n      const {\n        userLogin: { userInfo },\n      } = getState()\n      const config = {\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n\n      const { data } = await axios.post(\n        `/api/products/${productId}/reviews/`,\n        review,\n        config\n      )\n\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\n        payload: data,\n      })\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      })\n    }\n  }\n","import { useEffect } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product.js'\nimport LoadSpinner from '../components/LoadSpinner.js'\nimport AlertMessage from '../components/AlertMessage.js'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProducts } from '../actions/productActions'\n\nconst Home = () => {\n  const dispatch = useDispatch()\n  const productList = useSelector((state) => state.productList)\n  // using useSelector to tell it what part of the state we want to get\n  const { error, loading, products } = productList\n\n  useEffect(() => {\n    console.log('use effect reached')\n    dispatch(listProducts())\n    // updates store\n  }, [dispatch])\n\n  return (\n    <div>\n      <h1>Latest Art</h1>\n      {loading ? (\n        <LoadSpinner />\n      ) : error ? (\n        <AlertMessage heading=\"Error\" variant=\"warning\">\n          {error}\n        </AlertMessage>\n      ) : (\n        <Row>\n          {products.map((product) => (\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n              <Product product={product} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </div>\n  )\n}\n\nexport default Home\n","import { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useNavigate } from 'react-router-dom'\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  ListGroupItem,\n  Form,\n  FormGroup,\n  FormLabel,\n  FormControl,\n} from 'react-bootstrap'\nimport {\n  listProductDetail,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\nimport { useParams } from 'react-router'\nimport LoadSpinner from '../components/LoadSpinner'\nimport AlertMessage from '../components/AlertMessage'\nimport Rating from '../components/Rating'\n\nconst ProductPage = () => {\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const [quantity, setQuantity] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetail = useSelector((state) => state.productDetail)\n  const { loading, error, product } = productDetail\n\n  const productCreateReview = useSelector((state) => state.productCreateReview)\n  const {\n    loading: loadingReview,\n    error: errorReview,\n    success: successReview,\n  } = productCreateReview\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (successReview) {\n      setRating(0)\n      setComment('')\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n    dispatch(listProductDetail(id))\n  }, [dispatch, id, successReview])\n\n  const addProductToCart = () => {\n    console.log('added to cart:', id)\n    navigate(`/cart/${id}?quantity=${quantity}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(createProductReview(id, { rating, comment }))\n  }\n\n  return (\n    <div>\n      <Link to=\"/\" style={{ textDecoration: 'none' }}>\n        <i className=\"fas fa-arrow-left\"></i> Back\n      </Link>\n\n      {loading ? (\n        <LoadSpinner />\n      ) : error ? (\n        <AlertMessage heading=\"Error\" variant=\"warning\">\n          {error}\n        </AlertMessage>\n      ) : (\n        <div>\n          <Row>\n            <Col md={5}>\n              <Image\n                src={`${process.env.REACT_APP_BASE_URL}${product.image}`}\n                alt={product.name}\n                fluid\n              />\n            </Col>\n            <Col>\n              <div>\n                <ListGroupItem className=\"pb-0\">\n                  <h4>{product.name}</h4>\n                </ListGroupItem>\n                <ListGroupItem className=\"py-0\">\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                    color={'#f8e825'}\n                  />\n                </ListGroupItem>\n                <ListGroupItem>\n                  <h6>£{product.price}</h6>\n                </ListGroupItem>\n                <ListGroupItem className=\"py-0\">\n                  <p>{product.description}</p>\n                </ListGroupItem>\n              </div>\n            </Col>\n            <Col md={3}>\n              <Card className=\"card bg-light mb-3\">\n                <ListGroup>\n                  <ListGroupItem className=\"text-dark\">\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>£{product.price}</Col>\n                    </Row>\n                  </ListGroupItem>\n                  <hr className=\"my-0\" style={{ color: '#bac4d4' }} />\n                  <ListGroupItem className=\"text-dark\">\n                    <Row>\n                      {product.stockNum > 0 ? (\n                        <Col className=\"text-success\">In Stock</Col>\n                      ) : (\n                        <Col className=\"text-dark\">Out of Stock</Col>\n                      )}\n                    </Row>\n                  </ListGroupItem>\n                  <hr className=\"my-0\" style={{ color: '#bac4d4' }} />\n                  {product.stockNum > 0 && (\n                    <ListGroupItem className=\"text-dark\">\n                      <Row>\n                        <Col>Quantity</Col>\n                        <Col xs=\"auto\">\n                          <Form.Control\n                            as=\"select\"\n                            value={quantity}\n                            onChange={(e) => setQuantity(e.target.value)}\n                            size=\"sm\"\n                          >\n                            {[...Array(product.stockNum).keys()].map((num) => (\n                              <option key={num + 1} value={num + 1}>\n                                {num + 1}\n                              </option>\n                            ))}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroupItem>\n                  )}\n                  <ListGroupItem className=\"d-grid gap-2 pt-1\">\n                    <button\n                      type=\"button\"\n                      className=\"btn-dark\"\n                      onClick={addProductToCart}\n                      disabled={product.stockNum == 0}\n                      style={{\n                        borderRadius: '8px',\n                      }}\n                    >\n                      Add to cart\n                    </button>\n                  </ListGroupItem>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6} className=\"mt-4\">\n              <h5>Write a review</h5>\n              {loadingReview && <LoadSpinner />}\n              {successReview && (\n                <AlertMessage variant=\"success\" heading=\"Thank you!\">\n                  Review submitted\n                </AlertMessage>\n              )}\n              {errorReview && (\n                <AlertMessage variant=\"danger\" heading=\"Error\">\n                  {errorReview}\n                </AlertMessage>\n              )}\n              {userInfo ? (\n                <Form onSubmit={submitHandler}>\n                  <FormGroup controlId=\"rating\">\n                    <FormLabel>\n                      <strong>Rating</strong>\n                    </FormLabel>\n                    <FormControl\n                      as=\"select\"\n                      value={rating}\n                      onChange={(e) => setRating(e.target.value)}\n                      style={{ backgroundColor: 'rgba(17,78,119,0.3)' }}\n                    >\n                      <option value=\"\">Select</option>\n                      <option value=\"1\">1 - Very Bad</option>\n                      <option value=\"2\">2 - Bad</option>\n                      <option value=\"3\">3 - Average</option>\n                      <option value=\"4\">4 - Good</option>\n                      <option value=\"5\">5 - Very Good</option>\n                    </FormControl>\n                  </FormGroup>\n                  <FormGroup controlId=\"comment\">\n                    <FormLabel className=\"mt-2\">\n                      <strong>Comment</strong>\n                    </FormLabel>\n                    <FormControl\n                      as=\"textarea\"\n                      value={comment}\n                      onChange={(e) => setComment(e.target.value)}\n                    ></FormControl>\n                  </FormGroup>\n                  <button\n                    type=\"submit\"\n                    className=\"btn-dark mt-2\"\n                    disabled={loadingReview}\n                    style={{\n                      borderRadius: '8px',\n                      width: '100px',\n                    }}\n                  >\n                    Submit\n                  </button>\n                </Form>\n              ) : (\n                <AlertMessage variant=\"info\">\n                  Please <Link to=\"/login\">login</Link> to write a review\n                </AlertMessage>\n              )}\n            </Col>\n            <Col md={6} className=\"mt-4\">\n              <h5>Reviews</h5>\n              {product.reviews.length == 0 && (\n                <p style={{ color: '#b2b7bf' }}>No reviews yet</p>\n              )}\n              <div>\n                {product.reviews.map((review) => (\n                  <Card key={review._id} className=\"py-2 px-2 mb-2\">\n                    <p className=\"mb-0 pb-0\">\n                      <strong style={{ fontSize: '18px' }}>\n                        {review.name}\n                      </strong>\n                      <span style={{ color: '#b2b7bf' }}>\n                        {' '}\n                        | {review.createdAt.substring(0, 10)}\n                      </span>\n                    </p>\n                    <Rating value={review.rating} color={'#f8e825'} />\n                    <p className=\"mb-0\">{review.comment}</p>\n                  </Card>\n                ))}\n              </div>\n            </Col>\n          </Row>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ProductPage\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useNavigate } from 'react-router-dom'\nimport {\n  Form,\n  Button,\n  Row,\n  Col,\n  FormGroup,\n  FormLabel,\n  FormControl,\n} from 'react-bootstrap'\nimport AlertMessage from '../components/AlertMessage'\nimport LoadSpinner from '../components/LoadSpinner'\nimport { login } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\n\nconst LoginPage = () => {\n  const navigate = useNavigate()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const url = new URLSearchParams(document.location.search)\n  const redirect = url.has('redirect') ? url.get('redirect') : '/'\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  useEffect(() => {\n    console.log('first instance', redirect)\n    if (userInfo) {\n      navigate(`${redirect}`)\n      console.log('REDIRECT - ', redirect)\n    }\n  }, [navigate, redirect, userInfo])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h2>Log in</h2>\n      {error && (\n        <AlertMessage heading=\"Error\" variant=\"danger\">\n          Please enter correct details\n        </AlertMessage>\n      )}\n      {loading && <LoadSpinner />}\n      <Form onSubmit={submitHandler}>\n        <FormGroup controlId=\"email\">\n          <FormLabel className=\"mt-2\">Email</FormLabel>\n          <FormControl\n            type=\"email\"\n            placeholder=\"example@email.com\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></FormControl>\n        </FormGroup>\n        <FormGroup controlId=\"password\">\n          <FormLabel className=\"mt-2\">Password</FormLabel>\n          <FormControl\n            type=\"password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></FormControl>\n        </FormGroup>\n        <div className=\"d-grid gap-2\">\n          <Button type=\"submit\" className=\"btn btn-dark btn-sm mt-2\">\n            Log in\n          </Button>\n        </div>\n      </Form>\n      <Row className=\"py-3\">\n        <Col>\n          New here?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginPage\n","import { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useNavigate } from 'react-router-dom'\nimport {\n  Form,\n  Button,\n  Row,\n  Col,\n  FormGroup,\n  FormLabel,\n  FormControl,\n} from 'react-bootstrap'\nimport AlertMessage from '../components/AlertMessage'\nimport LoadSpinner from '../components/LoadSpinner'\nimport { register } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\n\nconst RegisterPage = () => {\n  const navigate = useNavigate()\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConf, setPasswordConf] = useState('')\n  const [message, setMessage] = useState('')\n\n  const dispatch = useDispatch()\n\n  const url = new URLSearchParams(document.location.search)\n  const redirect = url.has('redirect') ? url.get('redirect') : '/'\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(`${redirect}`)\n    }\n  }, [navigate, redirect, userInfo])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== passwordConf) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h2>Register</h2>\n      {message && (\n        <AlertMessage heading=\"Oops!\" variant=\"danger\">\n          {message}\n        </AlertMessage>\n      )}\n      {error && (\n        <AlertMessage heading=\"Error\" variant=\"danger\">\n          {error}\n        </AlertMessage>\n      )}\n      {loading && <LoadSpinner />}\n      <Form onSubmit={submitHandler}>\n        <FormGroup controlId=\"name\">\n          <FormLabel className=\"mt-1\">Name</FormLabel>\n          <FormControl\n            required\n            type=\"name\"\n            placeholder=\"Full name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></FormControl>\n        </FormGroup>\n        <FormGroup controlId=\"email\">\n          <FormLabel className=\"mt-2\">Email</FormLabel>\n          <FormControl\n            required\n            type=\"email\"\n            placeholder=\"example@email.com\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></FormControl>\n        </FormGroup>\n        <FormGroup controlId=\"password\">\n          <FormLabel className=\"mt-2\">Password</FormLabel>\n          <FormControl\n            required\n            type=\"password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></FormControl>\n        </FormGroup>\n        <FormGroup controlId=\"passwordConf\">\n          <FormLabel className=\"mt-2\">Confirm password</FormLabel>\n          <FormControl\n            required\n            type=\"password\"\n            placeholder=\"password\"\n            value={passwordConf}\n            onChange={(e) => setPasswordConf(e.target.value)}\n          ></FormControl>\n        </FormGroup>\n        <div className=\"d-grid gap-2\">\n          <Button type=\"submit\" className=\"btn btn-dark btn-sm mt-2\">\n            Register\n          </Button>\n        </div>\n      </Form>\n      <Row className=\"py-3\">\n        <Col>\n          Already registered?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Log in\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterPage\n","// import { useState, useEffect } from 'react'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { useNavigate } from 'react-router-dom'\n// import { Table, Button, Row, Col } from 'react-bootstrap'\n// import { LinkContainer } from 'react-router-bootstrap'\n// import AlertMessage from '../components/AlertMessage'\n// import LoadSpinner from '../components/LoadSpinner'\n// import { getUserDetails, updateUserProfile } from '../actions/userActions'\n// import { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n// import { getMyOrders } from '../actions/orderActions'\n\nconst Profile = () => {\n  // const navigate = useNavigate()\n  // const [name, setName] = useState('')\n  // const [email, setEmail] = useState('')\n  // const [password, setPassword] = useState('')\n  // const [passwordConf, setPasswordConf] = useState('')\n  // const [message, setMessage] = useState('')\n\n  // const dispatch = useDispatch()\n\n  // const userDetail = useSelector((state) => state.userDetail)\n  // const { loading, error, user } = userDetail\n\n  // const userLogin = useSelector((state) => state.userLogin)\n  // const { userInfo } = userLogin\n\n  // const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  // const { success } = userUpdateProfile\n\n  // const orderMyList = useSelector((state) => state.orderMyList)\n  // const { loading: loadingOrders, error: errorOrders, orders } = orderMyList\n\n  // useEffect(() => {\n  //   if (!userInfo) {\n  //     navigate('/login')\n  //   } else {\n  //     if (!user || !user.name || success) {\n  //       dispatch({ type: USER_UPDATE_PROFILE_RESET })\n  //       dispatch(getUserDetails('profile'))\n  //       dispatch(getMyOrders())\n  //     } else {\n  //       setName(user.name)\n  //       setEmail(user.email)\n  //     }\n  //   }\n  // }, [dispatch, navigate, userInfo, user, success])\n\n  return\n  // (\n  //   <Row>\n  //     <Col md={9}>\n  //       <h2>Order History</h2>\n  //       {loadingOrders ? (\n  //         <LoadSpinner />\n  //       ) : errorOrders ? (\n  //         <AlertMessage heading=\"Error\" variant=\"danger\">\n  //           {errorOrders}\n  //         </AlertMessage>\n  //       ) : (\n  //         <Table className=\"table-sm table-striped table-hover\">\n  //           <thead>\n  //             <tr>\n  //               <th>ID</th>\n  //               <th>Date</th>\n  //               <th>Total Cost</th>\n  //               <th>Paid</th>\n  //               <th>Status</th>\n  //             </tr>\n  //           </thead>\n\n  //           <tbody>\n  //             {orders.map((order) => (\n  //               <tr key={order._id}>\n  //                 <td>{order._id}</td>\n  //                 <td>{order.createdAt.substring(0, 10)}</td>\n  //                 <td>£{order.totalPrice}</td>\n  //                 <td>\n  //                   {order.isPaid ? order.paidAt.substring(0, 10) : <p>-</p>}\n  //                 </td>\n  //                 <td>\n  //                   <LinkContainer to={`/order/${order._id}`}>\n  //                     <Button\n  //                       type=\"submit\"\n  //                       className=\"btn btn-dark btn-sm mt-0\"\n  //                     >\n  //                       Details\n  //                     </Button>\n  //                   </LinkContainer>\n  //                 </td>\n  //               </tr>\n  //             ))}\n  //           </tbody>\n  //         </Table>\n  //       )}\n  //     </Col>\n  //   </Row>\n  // )\n}\n\nexport default Profile\n","import React from 'react'\nimport { Nav, NavItem } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { NavLink } from 'react-router-dom'\n\nconst FormSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className=\"justify-content-center mb-2\" style={{ minWidth: '400px' }}>\n      <NavItem>\n        {step1 ? (\n          <LinkContainer to=\"/login\">\n            <Nav.Link className=\"px-2\">Login</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link className=\"px-2\" disabled>\n            Login\n          </Nav.Link>\n        )}\n      </NavItem>\n      <NavItem>\n        {step2 ? (\n          <LinkContainer to=\"/shipping\">\n            <Nav.Link className=\"px-2\">Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link className=\"px-2\" disabled>\n            Shipping\n          </Nav.Link>\n        )}\n      </NavItem>\n      <NavItem>\n        {step3 ? (\n          <LinkContainer to=\"/payment\">\n            <Nav.Link className=\"px-2\">Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link className=\"px-2\" disabled>\n            Payment\n          </Nav.Link>\n        )}\n      </NavItem>\n      <NavItem>\n        {step4 ? (\n          <LinkContainer to=\"/confirm\">\n            <Nav.Link className=\"px-2\">Confirm order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link className=\"px-2\" disabled>\n            Confirm order\n          </Nav.Link>\n        )}\n      </NavItem>\n    </Nav>\n  )\n}\n\nexport default FormSteps\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  Form,\n  Button,\n  FormLabel,\n  FormControl,\n  FormGroup,\n} from 'react-bootstrap'\nimport FormContainer from '../components/FormContainer'\nimport { saveShippingAddress } from '../actions/cartActions'\nimport FormSteps from '../components/FormSteps'\n\nconst Shipping = () => {\n  const navigate = useNavigate()\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const dispatch = useDispatch()\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [postcode, setPostcode] = useState(shippingAddress.postcode)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const formHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, postcode, city, country }))\n    navigate(`/payment`)\n  }\n\n  return (\n    <FormContainer>\n      <FormSteps step1 step2 />\n      <h1>Order details</h1>\n      <h4>Shipping address:</h4>\n      <Form onSubmit={formHandler}>\n        <FormGroup controlId=\"address\">\n          <FormLabel className=\"mt-1\">Address</FormLabel>\n          <FormControl\n            required\n            type=\"text\"\n            placeholder=\"Address\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n          ></FormControl>\n        </FormGroup>\n        <FormGroup controlId=\"postcode\">\n          <FormLabel className=\"mt-1\">Postcode</FormLabel>\n          <FormControl\n            required\n            type=\"text\"\n            placeholder=\"Postcode\"\n            value={postcode}\n            onChange={(e) => setPostcode(e.target.value)}\n          ></FormControl>\n          <FormGroup controlId=\"city\">\n            <FormLabel className=\"mt-1\">City</FormLabel>\n            <FormControl\n              required\n              type=\"text\"\n              placeholder=\"City\"\n              value={city}\n              onChange={(e) => setCity(e.target.value)}\n            ></FormControl>\n            <FormGroup controlId=\"country\">\n              <FormLabel className=\"mt-1\">Country</FormLabel>\n              <FormControl\n                required\n                type=\"text\"\n                placeholder=\"Country\"\n                value={country}\n                onChange={(e) => setCountry(e.target.value)}\n              ></FormControl>\n            </FormGroup>\n          </FormGroup>\n        </FormGroup>\n        <div className=\"d-grid gap-2\">\n          <Button type=\"submit\" className=\"btn btn-dark btn-sm mt-2\">\n            Continue\n          </Button>\n        </div>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default Shipping\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport { savePaymentMethod } from '../actions/cartActions'\nimport {\n  Form,\n  Button,\n  FormLabel,\n  FormGroup,\n  Col,\n  Row,\n  FormCheck,\n} from 'react-bootstrap'\nimport FormContainer from '../components/FormContainer'\nimport FormSteps from '../components/FormSteps'\n\nconst Payment = () => {\n  const navigate = useNavigate()\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const dispatch = useDispatch()\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    navigate(`/confirmorder`)\n  }\n\n  return (\n    <FormContainer>\n      <FormSteps step1 step2 step3 />\n      <h1>Order details</h1>\n      <h4>Payment details</h4>\n      <Form onSubmit={submitHandler}>\n        <FormGroup>\n          <FormLabel className=\"mt-2\" as=\"legend\">\n            <p style={{ fontSize: '16px' }}>Select a payment method</p>\n          </FormLabel>\n          <Col>\n            <Row>\n              <div className=\"d-flex flex-row align-items-center gap-2\">\n                <FormCheck\n                  type=\"radio\"\n                  label=\"PayPal\"\n                  id=\"PayPal\"\n                  name=\"payment\"\n                  checked\n                  onChange={(e) => setPaymentMethod(e.target.value)}\n                ></FormCheck>\n                <i className=\"fab fa-paypal\"></i>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"d-flex flex-row align-items-center gap-2\">\n                <FormCheck\n                  disabled\n                  type=\"radio\"\n                  label=\"Visa Debit\"\n                  id=\"VisaDebit\"\n                  name=\"payment\"\n                  onChange={(e) => setPaymentMethod(e.target.value)}\n                ></FormCheck>\n                <i className=\"fab fa-cc-visa\"></i>\n              </div>\n            </Row>\n            <Row>\n              <div className=\"d-flex flex-row align-items-center gap-2\">\n                <FormCheck\n                  disabled\n                  type=\"radio\"\n                  label=\"ApplePay\"\n                  id=\"Apple Pay\"\n                  name=\"payment\"\n                  onChange={(e) => setPaymentMethod(e.target.value)}\n                ></FormCheck>\n                <i className=\"fab fa-cc-apple-pay\"></i>\n              </div>\n            </Row>\n          </Col>\n        </FormGroup>\n        <div className=\"d-grid gap-2\">\n          <Button type=\"submit\" className=\"btn btn-dark btn-sm mt-3\">\n            Continue\n          </Button>\n        </div>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default Payment\n","import { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate, Link } from 'react-router-dom'\nimport {\n  Button,\n  ListGroup,\n  Image,\n  Card,\n  Row,\n  Col,\n  ListGroupItem,\n} from 'react-bootstrap'\nimport FormSteps from '../components/FormSteps'\nimport AlertMessage from '../components/AlertMessage'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nconst ConfirmOrder = () => {\n  const navigate = useNavigate()\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { success, order, error } = orderCreate\n  const dispatch = useDispatch()\n  const cart = useSelector((state) => state.cart)\n\n  cart.totalPrice = cart.cartItems\n    .reduce((acc, item) => acc + item.price * item.quantity, 0)\n    .toFixed(2)\n\n  const pay = JSON.parse(localStorage.getItem('paymentMethod'))\n  console.log('PAYPAY : ', pay)\n\n  useEffect(() => {\n    if (success) {\n      navigate(`/order/${order._id}`)\n      dispatch({ type: ORDER_CREATE_RESET }) //need to reset cart and order\n    }\n  }, [success, navigate])\n\n  const orderHandler = () => {\n    console.log('confirmed order')\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  return (\n    <div>\n      <FormSteps step1 step2 step3 step4 />\n      <h3>Confirm Order</h3>\n      <Row>\n        <Col md={8}>\n          <ListGroup>\n            <ListGroupItem>\n              <h5>Shipping Address</h5>\n              <div className=\"d-flex flex-column gap-0\">\n                <p>\n                  {cart.shippingAddress.address}\n                  <br />\n                  {cart.shippingAddress.postcode}\n                  <br />\n                  {cart.shippingAddress.city}\n                  <br />\n                  {cart.shippingAddress.country}\n                </p>\n              </div>\n            </ListGroupItem>\n          </ListGroup>\n          <ListGroup className=\"mt-2\" variant=\"flush\">\n            <ListGroupItem>\n              <h5>Payment Method</h5>\n              <div className=\"d-flex flex-column gap-0\">\n                <p>\n                  <i className=\"fab fa-paypal\"></i>\n                  {cart.paymentMethod}\n                </p>\n              </div>\n            </ListGroupItem>\n          </ListGroup>\n          <ListGroup className=\"mt-2\">\n            <ListGroupItem>\n              <h5>Order Items</h5>\n              {cart.cartItems.length === 0 ? (\n                <AlertMessage heading=\"Oops!\" variant=\"warning\">\n                  Your cart is empty\n                </AlertMessage>\n              ) : (\n                <ListGroup>\n                  {cart.cartItems.map((item, id) => (\n                    <ListGroupItem key={id}>\n                      <Row>\n                        <Col md={2}>\n                          <Image\n                            src={`${process.env.REACT_APP_BASE_URL}${item.image}`}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col md={7}>\n                          <Link\n                            to={`/product/${item.product}`}\n                            style={{ textDecoration: 'none' }}\n                          >\n                            <h6>{item.name}</h6>\n                          </Link>\n                        </Col>\n                        <Col md={3}>\n                          {item.quantity} x £{item.price}\n                        </Col>\n                      </Row>\n                      <hr className=\"mt-0 mb-0\" style={{ color: 'white' }} />\n                    </ListGroupItem>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroupItem>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card className=\"card bg-light mb-3\">\n            <ListGroup>\n              <ListGroupItem className=\"text-dark my-0\">\n                <h3>Your order</h3>\n              </ListGroupItem>\n              <ListGroupItem className=\"text-dark my-0 py-0\">\n                <h6>Total price:</h6>\n              </ListGroupItem>\n              <ListGroupItem className=\"text-dark pt-0\">\n                <h1>£{cart.totalPrice}</h1>\n              </ListGroupItem>\n              <ListGroupItem>\n                {error && <AlertMessage variant=\"danger\">{error}</AlertMessage>}\n              </ListGroupItem>\n              <ListGroupItem className=\"d-grid gap-2 pt-1\">\n                <button\n                  type=\"button\"\n                  onClick={orderHandler}\n                  className=\"btn-dark\"\n                  style={{\n                    borderRadius: '8px',\n                    height: '40px',\n                  }}\n                >\n                  Confirm Order\n                </button>\n              </ListGroupItem>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default ConfirmOrder\n","import axios from 'axios'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_MY_LIST_SUCCESS,\n  ORDER_MY_LIST_REQUEST,\n  ORDER_MY_LIST_FAIL,\n  ORDER_MY_LIST_RESET,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\nimport { CART_RESET } from '../constants/cartConstants'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    // find who is logged in currently\n    // need to path in token to authorize\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // sending info to view, including token we just got + id of user\n    const { data } = await axios.post(`/api/orders/add/`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: CART_RESET,\n      payload: data,\n    })\n\n    localStorage.removeItem('cartItems')\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    // find who is logged in currently\n    // need to path in token to authorize\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    // sending info to view, including token we just got + id of user\n    const { data } = await axios.get(`/api/orders/${id}/`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${id}/pay/`,\n      paymentResult,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n\nexport const getMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_MY_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/myorders/`, config)\n\n    dispatch({\n      type: ORDER_MY_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_MY_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n\nexport const getOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n\nexport const deliverOrder = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/orders/${id}/deliver/`, {}, config)\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    })\n  }\n}\n","import { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate, Link } from 'react-router-dom'\nimport { useParams } from 'react-router'\nimport {\n  ListGroup,\n  Image,\n  Card,\n  Row,\n  Col,\n  ListGroupItem,\n} from 'react-bootstrap'\nimport LoadSpinner from '../components/LoadSpinner'\nimport AlertMessage from '../components/AlertMessage'\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from '../actions/orderActions'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nconst OrderPage = () => {\n  const [loaded, setLoaded] = useState(false)\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const cart = useSelector((state) => state.cart)\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { loading, order, error } = orderDetails\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading && !error) {\n    order.totalPrice = order.orderItems\n      .reduce((acc, item) => acc + item.price * item.quantity, 0)\n      .toFixed(2)\n  }\n\n  const paypalButtonScript = () => {\n    const script = document.createElement('script')\n    script.type = 'text/javascript'\n    script.src =\n      'https://www.paypal.com/sdk/js?client-id=ARSSh0ejARGDHtbeqWdJynonWBqCbdlaptRiFfaqtVU7kA_ApT6-kclfN-ubd6xvDRSWhteaXo3K1Fvp'\n    script.async = true\n    script.onload = () => {\n      setLoaded(true)\n    }\n    document.body.appendChild(script)\n  }\n\n  useEffect(() => {\n    if (!order || order._id !== Number(id) || successPay || successDeliver) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n\n      dispatch(getOrderDetails(id))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        paypalButtonScript()\n      } else {\n        setLoaded(true)\n      }\n    }\n  }, [order, id, dispatch, successPay, successDeliver])\n\n  const successfulPayment = (paymentResult) => {\n    dispatch(payOrder(id, paymentResult))\n  }\n\n  const successfulDelivery = () => {\n    dispatch(deliverOrder(id))\n  }\n\n  return loading ? (\n    <LoadSpinner />\n  ) : error ? (\n    <AlertMessage variant=\"danger\">{error}</AlertMessage>\n  ) : (\n    <div>\n      <h3>Order Summary</h3>\n      <Row>\n        <Col md={8}>\n          <ListGroup>\n            <ListGroupItem>\n              <h5>Shipping Address</h5>\n              <div className=\"d-flex flex-column gap-0\">\n                <p>\n                  {cart.shippingAddress.address}\n                  <br />\n                  {cart.shippingAddress.postcode}\n                  <br />\n                  {cart.shippingAddress.city}\n                  <br />\n                  {cart.shippingAddress.country}\n                </p>\n              </div>\n            </ListGroupItem>\n          </ListGroup>\n          <ListGroup className=\"mt-2\" variant=\"flush\">\n            <ListGroupItem>\n              <h5>Payment Method</h5>\n              <div className=\"d-flex flex-column gap-0\">\n                <p>\n                  <i className=\"fab fa-paypal\"></i>\n                  {order.paymentMethod}\n                </p>\n              </div>\n            </ListGroupItem>\n          </ListGroup>\n          <ListGroup className=\"mt-2\">\n            <ListGroupItem>\n              <h5>Order Items</h5>\n              {order.orderItems.length === 0 ? (\n                <AlertMessage heading=\"Oops!\" variant=\"warning\">\n                  Your order is empty\n                </AlertMessage>\n              ) : (\n                <ListGroup>\n                  {order.orderItems.map((item, id) => (\n                    <ListGroupItem key={id}>\n                      <Row>\n                        <Col md={2}>\n                          <Image\n                            src={`${process.env.REACT_APP_BASE_URL}${item.image}`}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col md={7}>\n                          <Link\n                            to={`/product/${item.product}`}\n                            style={{ textDecoration: 'none' }}\n                          >\n                            <h6>{item.name}</h6>\n                          </Link>\n                        </Col>\n                        <Col md={3}>\n                          {item.quantity} x £{item.price}\n                        </Col>\n                      </Row>\n                      <hr className=\"mt-0 mb-0\" style={{ color: 'white' }} />\n                    </ListGroupItem>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroupItem>\n          </ListGroup>\n          {/* {userInfo && userInfo.isAdmin && !order.isDelivered && (\n            <ListGroup className=\"mt-2\">\n              <Button\n                type=\"button\"\n                className=\"btn btn-block\"\n                onClick={successfulDelivery}\n              >\n                Mark Order As Delivered\n              </Button>\n            </ListGroup>\n          )} */}\n        </Col>\n        <Col md={4}>\n          <Card className=\"card bg-light mb-3\">\n            <ListGroup>\n              <ListGroupItem className=\"text-dark my-0\">\n                <h3>Your order</h3>\n              </ListGroupItem>\n              <ListGroupItem className=\"text-dark my-0 py-0\">\n                <h6>Total price:</h6>\n              </ListGroupItem>\n              <ListGroupItem className=\"text-dark pt-0\">\n                <h1>£{order.totalPrice}</h1>\n              </ListGroupItem>\n              {!order.isPaid && (\n                <ListGroupItem>\n                  {loadingPay && <LoadSpinner />}\n                  {!loaded ? (\n                    <LoadSpinner />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successfulPayment}\n                    />\n                  )}\n                </ListGroupItem>\n              )}\n            </ListGroup>\n          </Card>\n\n          <ListGroupItem className=\"py-0 px-0\">\n            {order.isPaid ? (\n              <AlertMessage heading=\"Payment status\" variant=\"success\">\n                Paid on {order.paidAt.substring(0, 10)}\n              </AlertMessage>\n            ) : (\n              <AlertMessage heading=\"Payment status\" variant=\"warning\">\n                Not yet paid\n              </AlertMessage>\n            )}\n          </ListGroupItem>\n          <ListGroupItem className=\"py-0 px-0\">\n            {order.isDelivered ? (\n              <AlertMessage heading=\"Delivery status\" variant=\"success\">\n                Delivered on {order.deliveredAt.substring(0, 10)}\n              </AlertMessage>\n            ) : (\n              <AlertMessage heading=\"Delivery status\" variant=\"warning\">\n                Not yet delivered\n              </AlertMessage>\n            )}\n          </ListGroupItem>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default OrderPage\n","import { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { Table, Button } from 'react-bootstrap'\nimport AlertMessage from '../components/AlertMessage'\nimport LoadSpinner from '../components/LoadSpinner'\nimport { getUserList, deleteUser } from '../actions/userActions'\n\nconst UserList = () => {\n  const dispatch = useDispatch()\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    dispatch(getUserList())\n  }, [dispatch, successDelete])\n\n  const handleDelete = (id) => {\n    if (window.confirm('Delete user?')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <div>\n      <h1>Users</h1>\n      {loading ? (\n        <LoadSpinner />\n      ) : error ? (\n        <AlertMessage variant=\"danger\" heading=\"Error\">\n          {error}\n        </AlertMessage>\n      ) : (\n        <Table className=\"table-sm table-striped table-hover table-bordered\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Admin</th>\n            </tr>\n            <th></th>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user.id}>\n                <td>{user.id}</td>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\"></i>\n                  ) : (\n                    <i className=\"fas fa-times\"></i>\n                  )}\n                </td>\n                <td>\n                  <Button\n                    className=\"btn-sm btn-secondary\"\n                    onClick={() => handleDelete(user.id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  )\n}\n\nexport default UserList\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useNavigate } from 'react-router-dom'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport AlertMessage from '../components/AlertMessage'\nimport LoadSpinner from '../components/LoadSpinner'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductList = () => {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products } = productList\n\n  const productDelete = useSelector((state) => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete\n\n  const productCreate = useSelector((state) => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n\n    if (successCreate) {\n      navigate(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts())\n    }\n  }, [dispatch, successDelete, successCreate, createdProduct])\n\n  const handleDelete = (id) => {\n    if (window.confirm('Delete product?')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const handleCreateProduct = (product) => {\n    console.log('added product')\n    dispatch(createProduct())\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col\n          style={{ display: 'flex', justifyContent: 'flex-end' }}\n          className=\"text-right\"\n        >\n          <Button\n            className=\"btn-sm btn-secondary\"\n            onClick={handleCreateProduct}\n            style={{ height: '35px', marginTop: '10px' }}\n          >\n            <i className=\"fas fa-plus\"> </i> Add Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <LoadSpinner />}\n      {errorDelete && (\n        <AlertMessage variant=\"danger\" heading=\"Error\">\n          {errorDelete}\n        </AlertMessage>\n      )}\n\n      {loadingCreate && <LoadSpinner />}\n      {errorCreate && (\n        <AlertMessage variant=\"danger\" heading=\"Error\">\n          {errorCreate}\n        </AlertMessage>\n      )}\n\n      {loading ? (\n        <LoadSpinner />\n      ) : error ? (\n        <AlertMessage variant=\"danger\" heading=\"Error\">\n          {error}\n        </AlertMessage>\n      ) : (\n        <Table className=\"table-sm table-striped table-hover table-bordered\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Price</th>\n              <th>Quantity</th>\n            </tr>\n            <th></th>\n          </thead>\n          <tbody>\n            {products.map((product) => (\n              <tr key={product._id}>\n                <td>{product._id}</td>\n                <td>{product.name}</td>\n                <td>£{product.price}</td>\n                <td>{product.stockNum}</td>\n                <td>\n                  <LinkContainer\n                    to={`/admin/product/${product._id}/edit`}\n                    style={{ cursor: 'pointer', marginRight: '10px' }}\n                  >\n                    <Button className=\"btn-sm btn-secondary\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    className=\"btn-sm btn-secondary\"\n                    onClick={() => handleDelete(product._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  )\n}\n\nexport default ProductList\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport LoadSpinner from '../components/LoadSpinner.js'\nimport AlertMessage from '../components/AlertMessage.js'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetail, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants.js'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router'\n\nconst ProductEdit = () => {\n  const { id } = useParams()\n  const navigate = useNavigate()\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [stockNum, setStockNum] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetail = useSelector((state) => state.productDetail)\n  const { product, error, loading } = productDetail\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      navigate(`/admin/productlist`)\n    } else {\n      if (!product.name || product._id !== Number(id)) {\n        dispatch(listProductDetail(id))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setStockNum(product.stockNum)\n        setDescription(product.description)\n      }\n    }\n  }, [product, id, dispatch, successUpdate, navigate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    console.log('product updated')\n    dispatch(\n      updateProduct({\n        _id: id,\n        name,\n        price,\n        image,\n        description,\n        stockNum,\n      })\n    )\n  }\n\n  const uploadImageHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n\n    formData.append('image', file)\n    formData.append('product_id', id)\n\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post(\n        '/api/products/upload/',\n        formData,\n        config\n      )\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      setUploading(false)\n    }\n  }\n\n  return (\n    <div>\n      <Link to=\"/admin/productlist\" style={{ textDecoration: 'none' }}>\n        <i className=\"fas fa-arrow-left\"></i> Back\n      </Link>\n\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <LoadSpinner />}\n        {errorUpdate && (\n          <AlertMessage variant=\"danger\" heading=\"Error\">\n            {errorUpdate}\n          </AlertMessage>\n        )}\n\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label className=\"mt-2\">Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Product name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"price\">\n            <Form.Label className=\"mt-2\">Price</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Product price\"\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"image\">\n            <Form.Label className=\"mt-2\">Image</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Product image\"\n              value={image}\n              onChange={(e) => setImage(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"formFile\">\n            <Form.Label className=\"mt-2\">Upload</Form.Label>\n            <Form.Control type=\"file\" onChange={uploadImageHandler} />\n          </Form.Group>\n\n          <Form.Group controlId=\"stockNum\">\n            <Form.Label className=\"mt-2\">Quantity in stock</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Quantity\"\n              value={stockNum}\n              onChange={(e) => setStockNum(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"description\">\n            <Form.Label className=\"mt-2\">Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            ></Form.Control>\n            {uploading && <LoadSpinner />}\n          </Form.Group>\n\n          <div className=\"d-grid gap-2\">\n            <Button type=\"submit\" className=\"btn btn-dark btn-sm mt-2\">\n              Update\n            </Button>\n          </div>\n        </Form>\n      </FormContainer>\n    </div>\n  )\n}\n\nexport default ProductEdit\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport AlertMessage from '../components/AlertMessage'\nimport LoadSpinner from '../components/LoadSpinner'\nimport { getOrders } from '../actions/orderActions'\n\nconst OrderList = () => {\n  const dispatch = useDispatch()\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n\n  useEffect(() => {\n    dispatch(getOrders())\n  }, [dispatch])\n\n  return (\n    <div>\n      <h1>Orders</h1>\n      {loading ? (\n        <LoadSpinner />\n      ) : error ? (\n        <AlertMessage variant=\"danger\" heading=\"Error\">\n          {error}\n        </AlertMessage>\n      ) : (\n        <Table className=\"table-sm table-striped table-hover table-bordered\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>User</th>\n              <th>Date</th>\n              <th>Total Price</th>\n              <th>Payment Status</th>\n              <th>Delivery Status</th>\n            </tr>\n            <th></th>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>£{order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\"></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\"></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer\n                    to={`/order/${order._id}`}\n                    style={{ cursor: 'pointer', marginRight: '10px' }}\n                  >\n                    <Button className=\"btn-sm btn-secondary\">Details</Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  )\n}\n\nexport default OrderList\n","import Footer from './components/Footer'\nimport Header from './components/Header'\nimport { Container } from 'react-bootstrap'\nimport { Routes, Route } from 'react-router-dom'\nimport Cart from './pages/Cart.js'\n\nimport Home from './pages/Home'\nimport ProductPage from './pages/ProductPage'\nimport LoginPage from './pages/LoginPage'\nimport RegisterPage from './pages/RegisterPage'\nimport Profile from './pages/Profile'\nimport Shipping from './pages/Shipping'\nimport Payment from './pages/Payment'\nimport ConfirmOrder from './pages/ConfirmOrder'\nimport OrderPage from './pages/OrderPage'\nimport UserList from './adminpages/UserList'\nimport ProductList from './adminpages/ProductList'\nimport ProductEdit from './adminpages/ProductEdit'\nimport OrderList from './adminpages/OrderList'\n\nfunction App() {\n  return (\n    <div className=\"body\">\n      <Header />\n      <Container className=\"py-3\">\n        <Routes>\n          <Route exact path=\"/\" element={<Home />} />\n          <Route exact path=\"/product/:id\" element={<ProductPage />} />\n          <Route exact path=\"/cart\" element={<Cart />} />\n          <Route path=\"/cart/:id/*\" element={<Cart />} />\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route path=\"/register\" element={<RegisterPage />} />\n          <Route path=\"/profile/\" element={<Profile />} />\n          <Route path=\"/login/shipping\" element={<Shipping />} />\n          <Route path=\"/payment\" element={<Payment />} />\n          <Route path=\"/confirmorder\" element={<ConfirmOrder />} />\n          <Route path=\"/order/:id\" element={<OrderPage />} />\n          <Route path=\"/admin/userlist\" element={<UserList />} />\n          <Route path=\"/admin/productlist\" element={<ProductList />} />\n          <Route path=\"/admin/product/:id/edit\" element={<ProductEdit />} />\n          <Route path=\"/admin/orderlist\" element={<OrderList />} />\n        </Routes>\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productCreateReviewReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userDetailReducer,\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderMyListReducer,\n  orderListReducer,\n} from './reducers/orderReducers'\n\n// states\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetail: productDetailReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetail: userDetailReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderMyList: orderMyListReducer,\n  orderList: orderListReducer,\n  userDelete: userDeleteReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productCreateReview: productCreateReviewReducer,\n})\n\n//loading local storage data into initial state\nconst storageItems = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst storageUserInfo = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst storageShippingAddress = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n// if items exists, get them and parse them. if not, set it empty array / null\n\nconst initialState = {\n  cart: { cartItems: storageItems, shippingAddress: storageShippingAddress },\n  userLogin: { userInfo: storageUserInfo },\n}\n\nconst middleware = [thunk]\n\n//creating store with set parameters\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n\n// make the constants, create the reducer, add it to store, make the action\n","import {\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_DETAIL_FAIL,\n  PRODUCT_DETAIL_SUCCESS,\n  PRODUCT_DETAIL_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_RESET,\n} from '../constants/productConstants'\n\n// Notes\n// Create a \"reducer\" function that determines what the new state\n// should be when something happens in the app\n\n// Reducers usually look at the type of action that happened\n// to decide how to update the state\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    // Do something here based on the different types of actions\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n    // set products to initial state\n\n    case PRODUCT_LIST_SUCCESS:\n      return { loading: false, products: action.payload }\n    //return back a payload of data - what we get from the api call\n\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n    // If this reducer doesn't recognize the action type, or doesn't\n    // care about this specific action, return the existing state unchanged\n  }\n}\n\nexport const productDetailReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAIL_REQUEST:\n      return { loading: true, ...state }\n\n    case PRODUCT_DETAIL_SUCCESS:\n      return { loading: false, product: action.payload }\n\n    case PRODUCT_DETAIL_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }\n\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }\n\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n\n    case PRODUCT_CREATE_RESET:\n      return {}\n\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n\n    default:\n      return state\n  }\n}\n\nexport const productCreateReviewReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n\n    default:\n      return state\n  }\n}\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_RESET,\n} from '../constants/cartConstants.js'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n      const existsItem = state.cartItems.find(\n        (value) => value.product === item.product\n      )\n\n      if (existsItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((value) =>\n            value.product === existsItem.product ? item : value\n          ),\n          // if its not the correct product, return original product\n          // if it is, fins the new product to update and replace with new item\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n          // if item doesn't exist already\n          // returns original state and original cart items\n          // adds in new item\n        }\n      }\n\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          (val) => val.product !== action.payload\n        ),\n        // keeps items that doesn't match that id\n        // if item with that id is found, create new array without item\n      }\n\n    case CART_SAVE_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      }\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      }\n\n    case CART_RESET:\n      return {\n        ...state,\n        cartItems: [],\n      }\n\n    default:\n      return state\n  }\n}\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAIL_REQUEST,\n  USER_DETAIL_SUCCESS,\n  USER_DETAIL_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n} from '../constants/userConstants.js'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n\n    case USER_LOGOUT:\n      return {} //resets state, clears user information\n\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n\n    case USER_LOGOUT:\n      return {} //resets state, clears user information\n\n    default:\n      return state\n  }\n}\n\nexport const userDetailReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAIL_REQUEST:\n      return { ...state, loading: true }\n\n    case USER_DETAIL_SUCCESS:\n      return { loading: false, user: action.payload }\n\n    case USER_DETAIL_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n\n    case USER_LIST_RESET:\n      return { users: [] }\n\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n  }\n}\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_RESET,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_MY_LIST_SUCCESS,\n  ORDER_MY_LIST_REQUEST,\n  ORDER_MY_LIST_FAIL,\n  ORDER_MY_LIST_RESET,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return { loading: true }\n\n    case ORDER_CREATE_SUCCESS:\n      return { loading: false, success: true, order: action.payload }\n\n    case ORDER_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n\n    case ORDER_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n\n    case ORDER_DETAILS_SUCCESS:\n      return { loading: false, order: action.payload }\n\n    case ORDER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      }\n\n    case ORDER_PAY_SUCCESS:\n      return { loading: false, success: true }\n\n    case ORDER_PAY_FAIL:\n      return { loading: false, error: action.payload }\n\n    case ORDER_PAY_RESET:\n      return {}\n\n    default:\n      return state\n  }\n}\n\nexport const orderMyListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_MY_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n\n    case ORDER_MY_LIST_SUCCESS:\n      return { loading: false, orders: action.payload }\n\n    case ORDER_MY_LIST_FAIL:\n      return { loading: false, error: action.payload }\n\n    case ORDER_MY_LIST_RESET:\n      return { orders: [] }\n\n    default:\n      return state\n  }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n\n    case ORDER_LIST_SUCCESS:\n      return { loading: false, orders: action.payload }\n\n    case ORDER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      }\n\n    case ORDER_DELIVER_SUCCESS:\n      return { loading: false, success: true }\n\n    case ORDER_DELIVER_FAIL:\n      return { loading: false, error: action.DELIVERload }\n\n    case ORDER_DELIVER_RESET:\n      return {}\n\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './bootstrap.css'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}